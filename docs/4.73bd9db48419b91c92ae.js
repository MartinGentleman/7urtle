(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{480:function(e,a,t){e.exports=t.p+"assets/images/walking-turtle.png"},481:function(e,a,t){e.exports=t.p+"assets/images/no-mutations-turtle.png"},482:function(e,a,t){e.exports=t.p+"assets/images/hiding-turtle.png"},672:function(e,a,t){"use strict";t.r(a);var n=t(1),l=t.n(n),r=t(6),c=t(20);a.default=function(){return l.a.createElement("main",null,l.a.createElement("header",{className:"whiteBackground"},l.a.createElement(r.h,null,l.a.createElement(r.s,null,l.a.createElement("h1",null,l.a.createElement("div",null,l.a.createElement("strong",null,"@7urtle"),"/lambda"),"Functional programming library for JavaScript")),l.a.createElement(r.s,null,l.a.createElement(r.f,{lg:"7",md:"12"},l.a.createElement("p",null,l.a.createElement("strong",null,"JavaScript")," open source library for ",l.a.createElement("strong",null,"functional programming")," to build anything from React to Node.js projects. It includes basic core functions, helpful utilities, and universal ",l.a.createElement("strong",null,"functors and monads"),"."),l.a.createElement(c.b,{to:"/get-started"},l.a.createElement(r.c,{color:"primary",title:"Install @7urtle/lambda with NPM or download a code to add it directly to your browser."},"Get started"))),l.a.createElement(r.f,null,l.a.createElement("img",{src:t(479)}))))),l.a.createElement("article",null,l.a.createElement(r.h,null,l.a.createElement(r.s,{className:"SkillLevel justify-content-center"},l.a.createElement("h2",null,"Focus on your own skill level"),l.a.createElement("p",null,l.a.createElement("strong",null,"@7urtle/lambda")," was written to help you transition towards functional programming no matter your skill level. You can pick up any functional features as you learn at your own pace. At the end you can master everything including pure functions, composition, currying, functors, and monads."),l.a.createElement("p",{className:"CTA"},l.a.createElement("a",{href:"/",title:"Learn functional programming in JavaScript"},"Learn functional programming ›"))),l.a.createElement(r.s,null,l.a.createElement(r.d,{className:"TopReason"},l.a.createElement(r.e,null,l.a.createElement(r.s,{className:"p0"},l.a.createElement(r.f,{xl:"6",lg:"5",md:"12",className:"p0"},l.a.createElement("h2",null,"Shorter and faster code"),l.a.createElement("p",null,"The combination of @7urtle/lambda and modern JavaScript syntax for functional programming leads to more concise code with very enjoyable elegance. Declarative code can be expected to be much shorter thanks to its inherent simplicity and reusability."),l.a.createElement("p",null,"Pure functions easily lend themselves to memoization/caching and simple performance optimization. In the end you have shorter and faster code."),l.a.createElement("p",{className:"CTA"},l.a.createElement("a",{href:"/",title:"Shorter and faster functional declarative code"},"See examples and comparisons of code ›"))),l.a.createElement(r.f,null,l.a.createElement("img",{src:t(480)})))))),l.a.createElement(r.s,{className:"p0"},l.a.createElement(r.f,{lg:"6",md:"12"},l.a.createElement(r.d,{className:"TopReason"},l.a.createElement(r.e,null,l.a.createElement("h2",null,"Functors and Monads"),l.a.createElement("p",null,"Functors from @7urtle/lambda allow you to achieve functional purity by giving you universal method for controlling synchronous and asynchronous side effects as well as better manage your error states."),l.a.createElement("p",{className:"CTA"},l.a.createElement("a",{href:"/",title:"Shorter and faster functional declarative code"},"See examples of functors in action ›")),l.a.createElement("div",{className:"NoMutations"},l.a.createElement("img",{src:t(481)}))))),l.a.createElement(r.f,null,l.a.createElement(r.d,{className:"TopReason height100"},l.a.createElement(r.e,null,l.a.createElement("h2",null,"Testability and safety"),l.a.createElement("p",null,"Pure functions created with functional programming and @7urtle/lambda are easy to test because they don't create side effects and are dependent only on its input. You avoid difficult mocking and easily achieve 100 % coverage."),l.a.createElement("p",{className:"CTA"},l.a.createElement("a",{href:"/",title:"Shorter and faster declarative functional code"},"See examples of testing strategies ›")),l.a.createElement("div",{className:"HidingTurtle"},l.a.createElement("img",{src:t(482)})))))))),l.a.createElement(r.s,{className:"FinalCTA whiteBackground"},l.a.createElement(r.h,null,l.a.createElement("h2",null,"Get Started"),l.a.createElement("p",null,"Install @7urtle/lambda with NPM or download a code to add it directly to your browser."),l.a.createElement(c.b,{to:"/get-started"},l.a.createElement(r.c,{color:"primary",title:"Install @7urtle/lambda with NPM or download a code to add it directly to your browser."},"Get Started")))))}}}]);