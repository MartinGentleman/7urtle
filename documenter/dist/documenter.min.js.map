{"version":3,"sources":["webpack://documenter/webpack/universalModuleDefinition","webpack://documenter/webpack/bootstrap","webpack://documenter/external \"fs\"","webpack://documenter/external \"path\"","webpack://documenter/./node_modules/commander/index.js","webpack://documenter/external \"readline\"","webpack://documenter/external \"events\"","webpack://documenter/external \"child_process\"","webpack://documenter/external \"util\"","webpack://documenter/./node_modules/@7urtle/lambda/src/conditional.js","webpack://documenter/./node_modules/@7urtle/lambda/src/utils.js","webpack://documenter/./node_modules/@7urtle/lambda/src/list.js","webpack://documenter/./node_modules/@7urtle/lambda/src/Maybe.js","webpack://documenter/./node_modules/@7urtle/lambda/src/Either.js","webpack://documenter/./node_modules/@7urtle/lambda/src/SyncEffect.js","webpack://documenter/./node_modules/@7urtle/logger/src/index.js","webpack://documenter/./node_modules/@7urtle/lambda/src/string.js","webpack://documenter/./node_modules/@7urtle/lambda/src/core.js","webpack://documenter/./src/index.js"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","EventEmitter","spawn","path","dirname","basename","fs","Option","flags","description","required","indexOf","optional","negate","split","length","test","short","shift","long","Command","commands","options","_execs","_allowUnknownOption","_args","_name","_helpFlags","_helpDescription","_helpShortFlag","_helpLongFlag","pad","str","width","len","Math","max","Array","join","outputHelpIfNecessary","cmd","outputHelp","process","exit","humanReadableArgName","arg","nameOutput","variadic","exists","file","statSync","isFile","e","incrementNodeInspectorPort","args","map","result","debugOption","match","debugHost","debugPort","parseInt","inherits","replace","attributeName","reduce","word","toUpperCase","slice","is","command","nameAndArgs","actionOptsOrExecDesc","execOpts","desc","opts","executables","isDefault","defaultExecutable","_noHelp","noHelp","_executableFile","executableFile","push","parseExpectedArgs","parent","arguments","addImplicitHelpCommand","self","forEach","argDetails","action","fn","listener","unknown","parsed","parseOptions","unknownOption","concat","missingArgument","variadicArgNotLast","splice","apply","on","_alias","option","defaultValue","oname","RegExp","regex","val","def","exec","undefined","allowUnknownOption","parse","argv","rawArgs","normalized","normalize","parseArgs","subCommand","find","alias","unshift","executeSubCommand","help","baseDir","isExplicitJS","pm","bin","extname","executableExt","resolvedLink","realpathSync","proc","localBin","platform","execArgv","stdio","customFds","execPath","signal","killed","exitCode","kill","err","code","console","error","runningCommand","lastOpt","index","opt","ret","optionFor","listeners","emit","filter","a","literal","unknownOptions","optionMissingArgument","_versionOptionName","_version","flag","version","versionOption","substr","stdout","write","argsDescription","_description","_argsDescription","Error","usage","_usage","prepareCommands","largestCommandLength","largestOptionLength","largestArgLength","padWidth","optionHelp","JSON","stringify","commandHelp","helpInformation","cmdName","parentCmdNames","parentCmd","cmds","cb","passthru","cbOutput","Buffer","isBuffer","helpOption","splitFlags","isEqual","b","isTrue","isTypeOf","typeOf","isString","isNull","isUndefined","isObject","isArray","isFunction","isLength","lengthOf","isEmpty","isNothing","isNotLength","isNotEqual","passThrough","f","deepInspect","log","String","inspectFunction","inspectArray","inspect","k","keysOf","inspectObject","inspectString","mapper","list","separator","keys","entries","x","Nothing","of","Either","message","trigger","flatMap","defaultConfiguration","levels","debug","info","warn","library","decorator","level","input","Date","toLocaleString","string","upperCaseOf","getLogger","configuration","fns","initial","reducer","reduceRight","v","compose","getNull","logger","createLogger","program","SyncEffect","commander","onLeft","onRight","functorEither","isLeft","either","commanderFailed","Maybe","rl","readline","createInterface","createReadStream","line_no","line"],"mappings":"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","file":"documenter.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"documenter\"] = factory();\n\telse\n\t\troot[\"documenter\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","module.exports = require(\"fs\");","module.exports = require(\"path\");","/**\n * Module dependencies.\n */\n\nvar EventEmitter = require('events').EventEmitter;\nvar spawn = require('child_process').spawn;\nvar path = require('path');\nvar dirname = path.dirname;\nvar basename = path.basename;\nvar fs = require('fs');\n\n/**\n * Inherit `Command` from `EventEmitter.prototype`.\n */\n\nrequire('util').inherits(Command, EventEmitter);\n\n/**\n * Expose the root command.\n */\n\nexports = module.exports = new Command();\n\n/**\n * Expose `Command`.\n */\n\nexports.Command = Command;\n\n/**\n * Expose `Option`.\n */\n\nexports.Option = Option;\n\n/**\n * Initialize a new `Option` with the given `flags` and `description`.\n *\n * @param {String} flags\n * @param {String} description\n * @api public\n */\n\nfunction Option(flags, description) {\n  this.flags = flags;\n  this.required = flags.indexOf('<') >= 0;\n  this.optional = flags.indexOf('[') >= 0;\n  this.negate = flags.indexOf('-no-') !== -1;\n  flags = flags.split(/[ ,|]+/);\n  if (flags.length > 1 && !/^[[<]/.test(flags[1])) this.short = flags.shift();\n  this.long = flags.shift();\n  this.description = description || '';\n}\n\n/**\n * Return option name.\n *\n * @return {String}\n * @api private\n */\n\nOption.prototype.name = function() {\n  return this.long.replace(/^--/, '');\n};\n\n/**\n * Return option name, in a camelcase format that can be used\n * as a object attribute key.\n *\n * @return {String}\n * @api private\n */\n\nOption.prototype.attributeName = function() {\n  return camelcase(this.name().replace(/^no-/, ''));\n};\n\n/**\n * Check if `arg` matches the short or long flag.\n *\n * @param {String} arg\n * @return {Boolean}\n * @api private\n */\n\nOption.prototype.is = function(arg) {\n  return this.short === arg || this.long === arg;\n};\n\n/**\n * Initialize a new `Command`.\n *\n * @param {String} name\n * @api public\n */\n\nfunction Command(name) {\n  this.commands = [];\n  this.options = [];\n  this._execs = {};\n  this._allowUnknownOption = false;\n  this._args = [];\n  this._name = name || '';\n\n  this._helpFlags = '-h, --help';\n  this._helpDescription = 'output usage information';\n  this._helpShortFlag = '-h';\n  this._helpLongFlag = '--help';\n}\n\n/**\n * Define a command.\n *\n * There are two styles of command: pay attention to where to put the description.\n *\n * Examples:\n *\n *      // Command implemented using action handler (description is supplied separately to `.command`)\n *      program\n *        .command('clone <source> [destination]')\n *        .description('clone a repository into a newly created directory')\n *        .action((source, destination) => {\n *          console.log('clone command called');\n *        });\n *\n *      // Command implemented using separate executable file (description is second parameter to `.command`)\n *      program\n *        .command('start <service>', 'start named service')\n *        .command('stop [service]', 'stop named serice, or all if no name supplied');\n *\n * @param {string} nameAndArgs - command name and arguments, args are `<required>` or `[optional]` and last may also be `variadic...`\n * @param {Object|string} [actionOptsOrExecDesc] - configuration options (for action), or description (for executable)\n * @param {Object} [execOpts] - configuration options (for executable)\n * @return {Command} returns new command for action handler, or top-level command for executable command\n * @api public\n */\n\nCommand.prototype.command = function(nameAndArgs, actionOptsOrExecDesc, execOpts) {\n  var desc = actionOptsOrExecDesc;\n  var opts = execOpts;\n  if (typeof desc === 'object' && desc !== null) {\n    opts = desc;\n    desc = null;\n  }\n  opts = opts || {};\n  var args = nameAndArgs.split(/ +/);\n  var cmd = new Command(args.shift());\n\n  if (desc) {\n    cmd.description(desc);\n    this.executables = true;\n    this._execs[cmd._name] = true;\n    if (opts.isDefault) this.defaultExecutable = cmd._name;\n  }\n  cmd._noHelp = !!opts.noHelp;\n  cmd._helpFlags = this._helpFlags;\n  cmd._helpDescription = this._helpDescription;\n  cmd._helpShortFlag = this._helpShortFlag;\n  cmd._helpLongFlag = this._helpLongFlag;\n  cmd._executableFile = opts.executableFile; // Custom name for executable file\n  this.commands.push(cmd);\n  cmd.parseExpectedArgs(args);\n  cmd.parent = this;\n\n  if (desc) return this;\n  return cmd;\n};\n\n/**\n * Define argument syntax for the top-level command.\n *\n * @api public\n */\n\nCommand.prototype.arguments = function(desc) {\n  return this.parseExpectedArgs(desc.split(/ +/));\n};\n\n/**\n * Add an implicit `help [cmd]` subcommand\n * which invokes `--help` for the given command.\n *\n * @api private\n */\n\nCommand.prototype.addImplicitHelpCommand = function() {\n  this.command('help [cmd]', 'display help for [cmd]');\n};\n\n/**\n * Parse expected `args`.\n *\n * For example `[\"[type]\"]` becomes `[{ required: false, name: 'type' }]`.\n *\n * @param {Array} args\n * @return {Command} for chaining\n * @api public\n */\n\nCommand.prototype.parseExpectedArgs = function(args) {\n  if (!args.length) return;\n  var self = this;\n  args.forEach(function(arg) {\n    var argDetails = {\n      required: false,\n      name: '',\n      variadic: false\n    };\n\n    switch (arg[0]) {\n      case '<':\n        argDetails.required = true;\n        argDetails.name = arg.slice(1, -1);\n        break;\n      case '[':\n        argDetails.name = arg.slice(1, -1);\n        break;\n    }\n\n    if (argDetails.name.length > 3 && argDetails.name.slice(-3) === '...') {\n      argDetails.variadic = true;\n      argDetails.name = argDetails.name.slice(0, -3);\n    }\n    if (argDetails.name) {\n      self._args.push(argDetails);\n    }\n  });\n  return this;\n};\n\n/**\n * Register callback `fn` for the command.\n *\n * Examples:\n *\n *      program\n *        .command('help')\n *        .description('display verbose help')\n *        .action(function() {\n *           // output help here\n *        });\n *\n * @param {Function} fn\n * @return {Command} for chaining\n * @api public\n */\n\nCommand.prototype.action = function(fn) {\n  var self = this;\n  var listener = function(args, unknown) {\n    // Parse any so-far unknown options\n    args = args || [];\n    unknown = unknown || [];\n\n    var parsed = self.parseOptions(unknown);\n\n    // Output help if necessary\n    outputHelpIfNecessary(self, parsed.unknown);\n\n    // If there are still any unknown options, then we simply\n    // die, unless someone asked for help, in which case we give it\n    // to them, and then we die.\n    if (parsed.unknown.length > 0) {\n      self.unknownOption(parsed.unknown[0]);\n    }\n\n    // Leftover arguments need to be pushed back. Fixes issue #56\n    if (parsed.args.length) args = parsed.args.concat(args);\n\n    self._args.forEach(function(arg, i) {\n      if (arg.required && args[i] == null) {\n        self.missingArgument(arg.name);\n      } else if (arg.variadic) {\n        if (i !== self._args.length - 1) {\n          self.variadicArgNotLast(arg.name);\n        }\n\n        args[i] = args.splice(i);\n      }\n    });\n\n    // Always append ourselves to the end of the arguments,\n    // to make sure we match the number of arguments the user\n    // expects\n    if (self._args.length) {\n      args[self._args.length] = self;\n    } else {\n      args.push(self);\n    }\n\n    fn.apply(self, args);\n  };\n  var parent = this.parent || this;\n  var name = parent === this ? '*' : this._name;\n  parent.on('command:' + name, listener);\n  if (this._alias) parent.on('command:' + this._alias, listener);\n  return this;\n};\n\n/**\n * Define option with `flags`, `description` and optional\n * coercion `fn`.\n *\n * The `flags` string should contain both the short and long flags,\n * separated by comma, a pipe or space. The following are all valid\n * all will output this way when `--help` is used.\n *\n *    \"-p, --pepper\"\n *    \"-p|--pepper\"\n *    \"-p --pepper\"\n *\n * Examples:\n *\n *     // simple boolean defaulting to undefined\n *     program.option('-p, --pepper', 'add pepper');\n *\n *     program.pepper\n *     // => undefined\n *\n *     --pepper\n *     program.pepper\n *     // => true\n *\n *     // simple boolean defaulting to true (unless non-negated option is also defined)\n *     program.option('-C, --no-cheese', 'remove cheese');\n *\n *     program.cheese\n *     // => true\n *\n *     --no-cheese\n *     program.cheese\n *     // => false\n *\n *     // required argument\n *     program.option('-C, --chdir <path>', 'change the working directory');\n *\n *     --chdir /tmp\n *     program.chdir\n *     // => \"/tmp\"\n *\n *     // optional argument\n *     program.option('-c, --cheese [type]', 'add cheese [marble]');\n *\n * @param {String} flags\n * @param {String} description\n * @param {Function|*} [fn] or default\n * @param {*} [defaultValue]\n * @return {Command} for chaining\n * @api public\n */\n\nCommand.prototype.option = function(flags, description, fn, defaultValue) {\n  var self = this,\n    option = new Option(flags, description),\n    oname = option.name(),\n    name = option.attributeName();\n\n  // default as 3rd arg\n  if (typeof fn !== 'function') {\n    if (fn instanceof RegExp) {\n      // This is a bit simplistic (especially no error messages), and probably better handled by caller using custom option processing.\n      // No longer documented in README, but still present for backwards compatibility.\n      var regex = fn;\n      fn = function(val, def) {\n        var m = regex.exec(val);\n        return m ? m[0] : def;\n      };\n    } else {\n      defaultValue = fn;\n      fn = null;\n    }\n  }\n\n  // preassign default value for --no-*, [optional], <required>, or plain flag if boolean value\n  if (option.negate || option.optional || option.required || typeof defaultValue === 'boolean') {\n    // when --no-foo we make sure default is true, unless a --foo option is already defined\n    if (option.negate) {\n      var opts = self.opts();\n      defaultValue = Object.prototype.hasOwnProperty.call(opts, name) ? opts[name] : true;\n    }\n    // preassign only if we have a default\n    if (defaultValue !== undefined) {\n      self[name] = defaultValue;\n      option.defaultValue = defaultValue;\n    }\n  }\n\n  // register the option\n  this.options.push(option);\n\n  // when it's passed assign the value\n  // and conditionally invoke the callback\n  this.on('option:' + oname, function(val) {\n    // coercion\n    if (val !== null && fn) {\n      val = fn(val, self[name] === undefined ? defaultValue : self[name]);\n    }\n\n    // unassigned or boolean value\n    if (typeof self[name] === 'boolean' || typeof self[name] === 'undefined') {\n      // if no value, negate false, and we have a default, then use it!\n      if (val == null) {\n        self[name] = option.negate\n          ? false\n          : defaultValue || true;\n      } else {\n        self[name] = val;\n      }\n    } else if (val !== null) {\n      // reassign\n      self[name] = option.negate ? false : val;\n    }\n  });\n\n  return this;\n};\n\n/**\n * Allow unknown options on the command line.\n *\n * @param {Boolean} arg if `true` or omitted, no error will be thrown\n * for unknown options.\n * @api public\n */\nCommand.prototype.allowUnknownOption = function(arg) {\n  this._allowUnknownOption = arguments.length === 0 || arg;\n  return this;\n};\n\n/**\n * Parse `argv`, settings options and invoking commands when defined.\n *\n * @param {Array} argv\n * @return {Command} for chaining\n * @api public\n */\n\nCommand.prototype.parse = function(argv) {\n  // implicit help\n  if (this.executables) this.addImplicitHelpCommand();\n\n  // store raw args\n  this.rawArgs = argv;\n\n  // guess name\n  this._name = this._name || basename(argv[1], '.js');\n\n  // github-style sub-commands with no sub-command\n  if (this.executables && argv.length < 3 && !this.defaultExecutable) {\n    // this user needs help\n    argv.push(this._helpLongFlag);\n  }\n\n  // process argv\n  var normalized = this.normalize(argv.slice(2));\n  var parsed = this.parseOptions(normalized);\n  var args = this.args = parsed.args;\n\n  var result = this.parseArgs(this.args, parsed.unknown);\n\n  // executable sub-commands\n  // (Debugging note for future: args[0] is not right if an action has been called)\n  var name = result.args[0];\n  var subCommand = null;\n\n  // Look for subcommand\n  if (name) {\n    subCommand = this.commands.find(function(command) {\n      return command._name === name;\n    });\n  }\n\n  // Look for alias\n  if (!subCommand && name) {\n    subCommand = this.commands.find(function(command) {\n      return command.alias() === name;\n    });\n    if (subCommand) {\n      name = subCommand._name;\n      args[0] = name;\n    }\n  }\n\n  // Look for default subcommand\n  if (!subCommand && this.defaultExecutable) {\n    name = this.defaultExecutable;\n    args.unshift(name);\n    subCommand = this.commands.find(function(command) {\n      return command._name === name;\n    });\n  }\n\n  if (this._execs[name] && typeof this._execs[name] !== 'function') {\n    return this.executeSubCommand(argv, args, parsed.unknown, subCommand ? subCommand._executableFile : undefined);\n  }\n\n  return result;\n};\n\n/**\n * Execute a sub-command executable.\n *\n * @param {Array} argv\n * @param {Array} args\n * @param {Array} unknown\n * @param {String} specifySubcommand\n * @api private\n */\n\nCommand.prototype.executeSubCommand = function(argv, args, unknown, executableFile) {\n  args = args.concat(unknown);\n\n  if (!args.length) this.help();\n  if (args[0] === 'help' && args.length === 1) this.help();\n\n  // <cmd> --help\n  if (args[0] === 'help') {\n    args[0] = args[1];\n    args[1] = this._helpLongFlag;\n  }\n\n  var isExplicitJS = false; // Whether to use node to launch \"executable\"\n\n  // executable\n  var pm = argv[1];\n  // name of the subcommand, like `pm-install`\n  var bin = basename(pm, path.extname(pm)) + '-' + args[0];\n  if (executableFile != null) {\n    bin = executableFile;\n    // Check for same extensions as we scan for below so get consistent launch behaviour.\n    var executableExt = path.extname(executableFile);\n    isExplicitJS = executableExt === '.js' || executableExt === '.ts' || executableExt === '.mjs';\n  }\n\n  // In case of globally installed, get the base dir where executable\n  //  subcommand file should be located at\n  var baseDir;\n\n  var resolvedLink = fs.realpathSync(pm);\n\n  baseDir = dirname(resolvedLink);\n\n  // prefer local `./<bin>` to bin in the $PATH\n  var localBin = path.join(baseDir, bin);\n\n  // whether bin file is a js script with explicit `.js` or `.ts` extension\n  if (exists(localBin + '.js')) {\n    bin = localBin + '.js';\n    isExplicitJS = true;\n  } else if (exists(localBin + '.ts')) {\n    bin = localBin + '.ts';\n    isExplicitJS = true;\n  } else if (exists(localBin + '.mjs')) {\n    bin = localBin + '.mjs';\n    isExplicitJS = true;\n  } else if (exists(localBin)) {\n    bin = localBin;\n  }\n\n  args = args.slice(1);\n\n  var proc;\n  if (process.platform !== 'win32') {\n    if (isExplicitJS) {\n      args.unshift(bin);\n      // add executable arguments to spawn\n      args = incrementNodeInspectorPort(process.execArgv).concat(args);\n\n      proc = spawn(process.argv[0], args, { stdio: 'inherit', customFds: [0, 1, 2] });\n    } else {\n      proc = spawn(bin, args, { stdio: 'inherit', customFds: [0, 1, 2] });\n    }\n  } else {\n    args.unshift(bin);\n    // add executable arguments to spawn\n    args = incrementNodeInspectorPort(process.execArgv).concat(args);\n    proc = spawn(process.execPath, args, { stdio: 'inherit' });\n  }\n\n  var signals = ['SIGUSR1', 'SIGUSR2', 'SIGTERM', 'SIGINT', 'SIGHUP'];\n  signals.forEach(function(signal) {\n    process.on(signal, function() {\n      if (proc.killed === false && proc.exitCode === null) {\n        proc.kill(signal);\n      }\n    });\n  });\n  proc.on('close', process.exit.bind(process));\n  proc.on('error', function(err) {\n    if (err.code === 'ENOENT') {\n      console.error('error: %s(1) does not exist, try --help', bin);\n    } else if (err.code === 'EACCES') {\n      console.error('error: %s(1) not executable. try chmod or run with root', bin);\n    }\n    process.exit(1);\n  });\n\n  // Store the reference to the child process\n  this.runningCommand = proc;\n};\n\n/**\n * Normalize `args`, splitting joined short flags. For example\n * the arg \"-abc\" is equivalent to \"-a -b -c\".\n * This also normalizes equal sign and splits \"--abc=def\" into \"--abc def\".\n *\n * @param {Array} args\n * @return {Array}\n * @api private\n */\n\nCommand.prototype.normalize = function(args) {\n  var ret = [],\n    arg,\n    lastOpt,\n    index,\n    short,\n    opt;\n\n  for (var i = 0, len = args.length; i < len; ++i) {\n    arg = args[i];\n    if (i > 0) {\n      lastOpt = this.optionFor(args[i - 1]);\n    }\n\n    if (arg === '--') {\n      // Honor option terminator\n      ret = ret.concat(args.slice(i));\n      break;\n    } else if (lastOpt && lastOpt.required) {\n      ret.push(arg);\n    } else if (arg.length > 2 && arg[0] === '-' && arg[1] !== '-') {\n      short = arg.slice(0, 2);\n      opt = this.optionFor(short);\n      if (opt && (opt.required || opt.optional)) {\n        ret.push(short);\n        ret.push(arg.slice(2));\n      } else {\n        arg.slice(1).split('').forEach(function(c) {\n          ret.push('-' + c);\n        });\n      }\n    } else if (/^--/.test(arg) && ~(index = arg.indexOf('='))) {\n      ret.push(arg.slice(0, index), arg.slice(index + 1));\n    } else {\n      ret.push(arg);\n    }\n  }\n\n  return ret;\n};\n\n/**\n * Parse command `args`.\n *\n * When listener(s) are available those\n * callbacks are invoked, otherwise the \"*\"\n * event is emitted and those actions are invoked.\n *\n * @param {Array} args\n * @return {Command} for chaining\n * @api private\n */\n\nCommand.prototype.parseArgs = function(args, unknown) {\n  var name;\n\n  if (args.length) {\n    name = args[0];\n    if (this.listeners('command:' + name).length) {\n      this.emit('command:' + args.shift(), args, unknown);\n    } else {\n      this.emit('command:*', args);\n    }\n  } else {\n    outputHelpIfNecessary(this, unknown);\n\n    // If there were no args and we have unknown options,\n    // then they are extraneous and we need to error.\n    if (unknown.length > 0) {\n      this.unknownOption(unknown[0]);\n    }\n    if (this.commands.length === 0 &&\n        this._args.filter(function(a) { return a.required; }).length === 0) {\n      this.emit('command:*');\n    }\n  }\n\n  return this;\n};\n\n/**\n * Return an option matching `arg` if any.\n *\n * @param {String} arg\n * @return {Option}\n * @api private\n */\n\nCommand.prototype.optionFor = function(arg) {\n  for (var i = 0, len = this.options.length; i < len; ++i) {\n    if (this.options[i].is(arg)) {\n      return this.options[i];\n    }\n  }\n};\n\n/**\n * Parse options from `argv` returning `argv`\n * void of these options.\n *\n * @param {Array} argv\n * @return {Array}\n * @api public\n */\n\nCommand.prototype.parseOptions = function(argv) {\n  var args = [],\n    len = argv.length,\n    literal,\n    option,\n    arg;\n\n  var unknownOptions = [];\n\n  // parse options\n  for (var i = 0; i < len; ++i) {\n    arg = argv[i];\n\n    // literal args after --\n    if (literal) {\n      args.push(arg);\n      continue;\n    }\n\n    if (arg === '--') {\n      literal = true;\n      continue;\n    }\n\n    // find matching Option\n    option = this.optionFor(arg);\n\n    // option is defined\n    if (option) {\n      // requires arg\n      if (option.required) {\n        arg = argv[++i];\n        if (arg == null) return this.optionMissingArgument(option);\n        this.emit('option:' + option.name(), arg);\n      // optional arg\n      } else if (option.optional) {\n        arg = argv[i + 1];\n        if (arg == null || (arg[0] === '-' && arg !== '-')) {\n          arg = null;\n        } else {\n          ++i;\n        }\n        this.emit('option:' + option.name(), arg);\n      // flag\n      } else {\n        this.emit('option:' + option.name());\n      }\n      continue;\n    }\n\n    // looks like an option\n    if (arg.length > 1 && arg[0] === '-') {\n      unknownOptions.push(arg);\n\n      // If the next argument looks like it might be\n      // an argument for this option, we pass it on.\n      // If it isn't, then it'll simply be ignored\n      if ((i + 1) < argv.length && (argv[i + 1][0] !== '-' || argv[i + 1] === '-')) {\n        unknownOptions.push(argv[++i]);\n      }\n      continue;\n    }\n\n    // arg\n    args.push(arg);\n  }\n\n  return { args: args, unknown: unknownOptions };\n};\n\n/**\n * Return an object containing options as key-value pairs\n *\n * @return {Object}\n * @api public\n */\nCommand.prototype.opts = function() {\n  var result = {},\n    len = this.options.length;\n\n  for (var i = 0; i < len; i++) {\n    var key = this.options[i].attributeName();\n    result[key] = key === this._versionOptionName ? this._version : this[key];\n  }\n  return result;\n};\n\n/**\n * Argument `name` is missing.\n *\n * @param {String} name\n * @api private\n */\n\nCommand.prototype.missingArgument = function(name) {\n  console.error(\"error: missing required argument '%s'\", name);\n  process.exit(1);\n};\n\n/**\n * `Option` is missing an argument, but received `flag` or nothing.\n *\n * @param {String} option\n * @param {String} flag\n * @api private\n */\n\nCommand.prototype.optionMissingArgument = function(option, flag) {\n  if (flag) {\n    console.error(\"error: option '%s' argument missing, got '%s'\", option.flags, flag);\n  } else {\n    console.error(\"error: option '%s' argument missing\", option.flags);\n  }\n  process.exit(1);\n};\n\n/**\n * Unknown option `flag`.\n *\n * @param {String} flag\n * @api private\n */\n\nCommand.prototype.unknownOption = function(flag) {\n  if (this._allowUnknownOption) return;\n  console.error(\"error: unknown option '%s'\", flag);\n  process.exit(1);\n};\n\n/**\n * Variadic argument with `name` is not the last argument as required.\n *\n * @param {String} name\n * @api private\n */\n\nCommand.prototype.variadicArgNotLast = function(name) {\n  console.error(\"error: variadic arguments must be last '%s'\", name);\n  process.exit(1);\n};\n\n/**\n * Set the program version to `str`.\n *\n * This method auto-registers the \"-V, --version\" flag\n * which will print the version number when passed.\n *\n * You can optionally supply the  flags and description to override the defaults.\n *\n * @param {String} str\n * @param {String} [flags]\n * @param {String} [description]\n * @return {Command} for chaining\n * @api public\n */\n\nCommand.prototype.version = function(str, flags, description) {\n  if (arguments.length === 0) return this._version;\n  this._version = str;\n  flags = flags || '-V, --version';\n  description = description || 'output the version number';\n  var versionOption = new Option(flags, description);\n  this._versionOptionName = versionOption.long.substr(2) || 'version';\n  this.options.push(versionOption);\n  this.on('option:' + this._versionOptionName, function() {\n    process.stdout.write(str + '\\n');\n    process.exit(0);\n  });\n  return this;\n};\n\n/**\n * Set the description to `str`.\n *\n * @param {String} str\n * @param {Object} argsDescription\n * @return {String|Command}\n * @api public\n */\n\nCommand.prototype.description = function(str, argsDescription) {\n  if (arguments.length === 0) return this._description;\n  this._description = str;\n  this._argsDescription = argsDescription;\n  return this;\n};\n\n/**\n * Set an alias for the command\n *\n * @param {String} alias\n * @return {String|Command}\n * @api public\n */\n\nCommand.prototype.alias = function(alias) {\n  var command = this;\n  if (this.commands.length !== 0) {\n    command = this.commands[this.commands.length - 1];\n  }\n\n  if (arguments.length === 0) return command._alias;\n\n  if (alias === command._name) throw new Error('Command alias can\\'t be the same as its name');\n\n  command._alias = alias;\n  return this;\n};\n\n/**\n * Set / get the command usage `str`.\n *\n * @param {String} str\n * @return {String|Command}\n * @api public\n */\n\nCommand.prototype.usage = function(str) {\n  var args = this._args.map(function(arg) {\n    return humanReadableArgName(arg);\n  });\n\n  var usage = '[options]' +\n    (this.commands.length ? ' [command]' : '') +\n    (this._args.length ? ' ' + args.join(' ') : '');\n\n  if (arguments.length === 0) return this._usage || usage;\n  this._usage = str;\n\n  return this;\n};\n\n/**\n * Get or set the name of the command\n *\n * @param {String} str\n * @return {String|Command}\n * @api public\n */\n\nCommand.prototype.name = function(str) {\n  if (arguments.length === 0) return this._name;\n  this._name = str;\n  return this;\n};\n\n/**\n * Return prepared commands.\n *\n * @return {Array}\n * @api private\n */\n\nCommand.prototype.prepareCommands = function() {\n  return this.commands.filter(function(cmd) {\n    return !cmd._noHelp;\n  }).map(function(cmd) {\n    var args = cmd._args.map(function(arg) {\n      return humanReadableArgName(arg);\n    }).join(' ');\n\n    return [\n      cmd._name +\n        (cmd._alias ? '|' + cmd._alias : '') +\n        (cmd.options.length ? ' [options]' : '') +\n        (args ? ' ' + args : ''),\n      cmd._description\n    ];\n  });\n};\n\n/**\n * Return the largest command length.\n *\n * @return {Number}\n * @api private\n */\n\nCommand.prototype.largestCommandLength = function() {\n  var commands = this.prepareCommands();\n  return commands.reduce(function(max, command) {\n    return Math.max(max, command[0].length);\n  }, 0);\n};\n\n/**\n * Return the largest option length.\n *\n * @return {Number}\n * @api private\n */\n\nCommand.prototype.largestOptionLength = function() {\n  var options = [].slice.call(this.options);\n  options.push({\n    flags: this._helpFlags\n  });\n\n  return options.reduce(function(max, option) {\n    return Math.max(max, option.flags.length);\n  }, 0);\n};\n\n/**\n * Return the largest arg length.\n *\n * @return {Number}\n * @api private\n */\n\nCommand.prototype.largestArgLength = function() {\n  return this._args.reduce(function(max, arg) {\n    return Math.max(max, arg.name.length);\n  }, 0);\n};\n\n/**\n * Return the pad width.\n *\n * @return {Number}\n * @api private\n */\n\nCommand.prototype.padWidth = function() {\n  var width = this.largestOptionLength();\n  if (this._argsDescription && this._args.length) {\n    if (this.largestArgLength() > width) {\n      width = this.largestArgLength();\n    }\n  }\n\n  if (this.commands && this.commands.length) {\n    if (this.largestCommandLength() > width) {\n      width = this.largestCommandLength();\n    }\n  }\n\n  return width;\n};\n\n/**\n * Return help for options.\n *\n * @return {String}\n * @api private\n */\n\nCommand.prototype.optionHelp = function() {\n  var width = this.padWidth();\n\n  // Append the help information\n  return this.options.map(function(option) {\n    return pad(option.flags, width) + '  ' + option.description +\n      ((!option.negate && option.defaultValue !== undefined) ? ' (default: ' + JSON.stringify(option.defaultValue) + ')' : '');\n  }).concat([pad(this._helpFlags, width) + '  ' + this._helpDescription])\n    .join('\\n');\n};\n\n/**\n * Return command help documentation.\n *\n * @return {String}\n * @api private\n */\n\nCommand.prototype.commandHelp = function() {\n  if (!this.commands.length) return '';\n\n  var commands = this.prepareCommands();\n  var width = this.padWidth();\n\n  return [\n    'Commands:',\n    commands.map(function(cmd) {\n      var desc = cmd[1] ? '  ' + cmd[1] : '';\n      return (desc ? pad(cmd[0], width) : cmd[0]) + desc;\n    }).join('\\n').replace(/^/gm, '  '),\n    ''\n  ].join('\\n');\n};\n\n/**\n * Return program help documentation.\n *\n * @return {String}\n * @api private\n */\n\nCommand.prototype.helpInformation = function() {\n  var desc = [];\n  if (this._description) {\n    desc = [\n      this._description,\n      ''\n    ];\n\n    var argsDescription = this._argsDescription;\n    if (argsDescription && this._args.length) {\n      var width = this.padWidth();\n      desc.push('Arguments:');\n      desc.push('');\n      this._args.forEach(function(arg) {\n        desc.push('  ' + pad(arg.name, width) + '  ' + argsDescription[arg.name]);\n      });\n      desc.push('');\n    }\n  }\n\n  var cmdName = this._name;\n  if (this._alias) {\n    cmdName = cmdName + '|' + this._alias;\n  }\n  var parentCmdNames = '';\n  for (var parentCmd = this.parent; parentCmd; parentCmd = parentCmd.parent) {\n    parentCmdNames = parentCmd.name() + ' ' + parentCmdNames;\n  }\n  var usage = [\n    'Usage: ' + parentCmdNames + cmdName + ' ' + this.usage(),\n    ''\n  ];\n\n  var cmds = [];\n  var commandHelp = this.commandHelp();\n  if (commandHelp) cmds = [commandHelp];\n\n  var options = [\n    'Options:',\n    '' + this.optionHelp().replace(/^/gm, '  '),\n    ''\n  ];\n\n  return usage\n    .concat(desc)\n    .concat(options)\n    .concat(cmds)\n    .join('\\n');\n};\n\n/**\n * Output help information for this command.\n *\n * When listener(s) are available for the helpLongFlag\n * those callbacks are invoked.\n *\n * @api public\n */\n\nCommand.prototype.outputHelp = function(cb) {\n  if (!cb) {\n    cb = function(passthru) {\n      return passthru;\n    };\n  }\n  const cbOutput = cb(this.helpInformation());\n  if (typeof cbOutput !== 'string' && !Buffer.isBuffer(cbOutput)) {\n    throw new Error('outputHelp callback must return a string or a Buffer');\n  }\n  process.stdout.write(cbOutput);\n  this.emit(this._helpLongFlag);\n};\n\n/**\n * You can pass in flags and a description to override the help\n * flags and help description for your command.\n *\n * @param {String} [flags]\n * @param {String} [description]\n * @return {Command}\n * @api public\n */\n\nCommand.prototype.helpOption = function(flags, description) {\n  this._helpFlags = flags || this._helpFlags;\n  this._helpDescription = description || this._helpDescription;\n\n  var splitFlags = this._helpFlags.split(/[ ,|]+/);\n\n  if (splitFlags.length > 1) this._helpShortFlag = splitFlags.shift();\n\n  this._helpLongFlag = splitFlags.shift();\n\n  return this;\n};\n\n/**\n * Output help information and exit.\n *\n * @param {Function} [cb]\n * @api public\n */\n\nCommand.prototype.help = function(cb) {\n  this.outputHelp(cb);\n  process.exit();\n};\n\n/**\n * Camel-case the given `flag`\n *\n * @param {String} flag\n * @return {String}\n * @api private\n */\n\nfunction camelcase(flag) {\n  return flag.split('-').reduce(function(str, word) {\n    return str + word[0].toUpperCase() + word.slice(1);\n  });\n}\n\n/**\n * Pad `str` to `width`.\n *\n * @param {String} str\n * @param {Number} width\n * @return {String}\n * @api private\n */\n\nfunction pad(str, width) {\n  var len = Math.max(0, width - str.length);\n  return str + Array(len + 1).join(' ');\n}\n\n/**\n * Output help information if necessary\n *\n * @param {Command} command to output help for\n * @param {Array} array of options to search for -h or --help\n * @api private\n */\n\nfunction outputHelpIfNecessary(cmd, options) {\n  options = options || [];\n\n  for (var i = 0; i < options.length; i++) {\n    if (options[i] === cmd._helpLongFlag || options[i] === cmd._helpShortFlag) {\n      cmd.outputHelp();\n      process.exit(0);\n    }\n  }\n}\n\n/**\n * Takes an argument an returns its human readable equivalent for help usage.\n *\n * @param {Object} arg\n * @return {String}\n * @api private\n */\n\nfunction humanReadableArgName(arg) {\n  var nameOutput = arg.name + (arg.variadic === true ? '...' : '');\n\n  return arg.required\n    ? '<' + nameOutput + '>'\n    : '[' + nameOutput + ']';\n}\n\n// for versions before node v0.8 when there weren't `fs.existsSync`\nfunction exists(file) {\n  try {\n    if (fs.statSync(file).isFile()) {\n      return true;\n    }\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Scan arguments and increment port number for inspect calls (to avoid conflicts when spawning new command).\n *\n * @param {string[]} args - array of arguments from node.execArgv\n * @returns {string[]}\n * @api private\n */\n\nfunction incrementNodeInspectorPort(args) {\n  // Testing for these options:\n  //  --inspect[=[host:]port]\n  //  --inspect-brk[=[host:]port]\n  //  --inspect-port=[host:]port\n  return args.map((arg) => {\n    var result = arg;\n    if (arg.indexOf('--inspect') === 0) {\n      var debugOption;\n      var debugHost = '127.0.0.1';\n      var debugPort = '9229';\n      var match;\n      if ((match = arg.match(/^(--inspect(-brk)?)$/)) !== null) {\n        // e.g. --inspect\n        debugOption = match[1];\n      } else if ((match = arg.match(/^(--inspect(-brk|-port)?)=([^:]+)$/)) !== null) {\n        debugOption = match[1];\n        if (/^\\d+$/.test(match[3])) {\n          // e.g. --inspect=1234\n          debugPort = match[3];\n        } else {\n          // e.g. --inspect=localhost\n          debugHost = match[3];\n        }\n      } else if ((match = arg.match(/^(--inspect(-brk|-port)?)=([^:]+):(\\d+)$/)) !== null) {\n        // e.g. --inspect=localhost:1234\n        debugOption = match[1];\n        debugHost = match[3];\n        debugPort = match[4];\n      }\n\n      if (debugOption && debugPort !== '0') {\n        result = `${debugOption}=${debugHost}:${parseInt(debugPort) + 1}`;\n      }\n    }\n    return result;\n  });\n}\n","module.exports = require(\"readline\");","module.exports = require(\"events\");","module.exports = require(\"child_process\");","module.exports = require(\"util\");","import {typeOf, lengthOf} from \"./utils\";\n\n/**\n * isEqual :: a -> b -> boolean\n *\n * isEqual output is true if strict equality between a and b is true.\n * isEqual output is always false for comparison of objects and arrays.\n */\nexport const isEqual = a => b => a === b;\n\n/**\n * isNotEqual :: a -> b -> boolean\n *\n * isNotEqual output is true if strict equality between a and b is false.\n * isNotEqual output is always true for comparison of objects and arrays.\n */\nexport const isNotEqual = a => b => a !== b;\n\n/**\n * isTrue :: a -> boolean\n *\n * isTrue output is true if input is true.\n */\nexport const isTrue = isEqual(true);\n\n/**\n * isFalse :: a -> Boolean\n *\n * isFalse output is true if input is false.\n */\nexport const isFalse = isEqual(false);\n\n/**\n * isGreaterThan :: a -> b -> boolean\n *\n * isGreaterThan output is true if b is greater than a.\n */\nexport const isGreaterThan = a => b => b > a;\n\n/**\n * isLessThan :: a -> b -> boolean\n *\n * isLessThan output is true if b is less than a.\n */\nexport const isLessThan = a => b => b < a;\n\n/**\n * isAtLeast :: a -> b -> boolean\n *\n * isAtLeast output is true if b is greater or equal to a.\n */\nexport const isAtLeast = a => b => b >= a;\n\n/**\n * isAtMost :: a -> b -> boolean\n *\n * isAtMost output is true if b is less or equal to a.\n */\nexport const isAtMost = a => b => b <= a;\n\n/**\n * isTypeOf :: a -> b -> boolean\n *\n * isTypeOf output is true if b is a type of a.\n */\nexport const isTypeOf = a => b => isEqual(typeOf(b))(a);\n\n/**\n * isString :: a -> boolean\n *\n * isString output is true if b is a string.\n */\nexport const isString = isTypeOf('string');\n\n/**\n * isBoolean :: a -> boolean\n *\n * isBoolean output is true if b is a boolean.\n */\nexport const isBoolean = isTypeOf('boolean');\n\n/**\n * isNull :: a -> boolean\n *\n * isNull output is true if b is a null.\n */\nexport const isNull = isEqual(null);\n\n/**\n * isUndefined :: a -> boolean\n *\n * isUndefined output is true if b is an undefined.\n */\nexport const isUndefined = isTypeOf('undefined');\n\n/**\n * isNumber :: a -> boolean\n *\n * isNumber output is true if b is a number.\n */\nexport const isNumber = isTypeOf('number');\n\n/**\n * isObject :: a -> boolean\n *\n * isObject output is true if b is an object, array of null.\n */\nexport const isObject = isTypeOf('object');\n\n/**\n * isArray :: a -> boolean\n *\n * isArray output is true if b is an array.\n */\nexport const isArray = Array.isArray;\n\n/**\n * isFunction :: a -> boolean\n *\n * isFunction output is true if b is a function.\n */\nexport const isFunction = isTypeOf('function');\n\n/**\n * isLength :: (string|array) -> b -> boolean\n *\n * isLength output is true if b is a length of a.\n */\nexport const isLength = a => b => isEqual(lengthOf(b))(a);\n\n/**\n * isNotLength :: (string|array) -> b -> boolean\n *\n * isNotLength output is true if b is not a length of a.\n */\nexport const isNotLength = a => b => !isLength(a)(b);\n\n/**\n * isEmpty :: (string|array) -> boolean\n *\n * isEmpty output is true if input has a length of 0.\n * isEmpty output is always false if input is an object and not an array or a string.\n */\nexport const isEmpty = isLength(0);\n\n/**\n * isNotEmpty :: (string|array) -> boolean\n *\n * isNotEmpty output is true if input does not have a length of 0.\n * isNotEmpty output is always true if input is an object and not an array or a string.\n */\nexport const isNotEmpty = isNotLength(0);\n\n/**\n * isZero :: a -> boolean\n *\n * isZero output is true if a is 0.\n */\nexport const isZero = isEqual(0);\n\n/**\n * isNotZero :: a -> boolean\n *\n * isNotZero output is true if a is not 0.\n */\nexport const isNotZero = isNotEqual(0);\n\n/**\n * isNothing :: a -> boolean\n *\n * isNothing returns true if input is null, undefined or empty string or empty array.\n */\nexport const isNothing = a => isNull(a) || isUndefined(a) || isEmpty(a);\n\n/**\n * isJust :: a -> boolean\n *\n * isJust returns true if input is not null, undefined or empty string or empty array.\n */\nexport const isJust = a => !isNothing(a);","import {isArray, isEqual, isString, isObject, isFunction, isNull, isUndefined} from \"./conditional\";\nimport {keysOf, join, map} from \"./list\";\n\n/**\n * typeOf :: a -> string\n *\n * typeOf outputs type of its input a.\n */\nexport const typeOf = a => typeof a;\n\n/**\n * lengthOf :: (string|array) -> number\n */\nexport const lengthOf = a => a.length;\n\n/**\n * passThrough :: function -> a -> a\n *\n * passThrough output is the same as input a.\n * passThrough executes function passed as first argument.\n */\nexport const passThrough = f => a => {\n  f(a);\n  return a;\n};\n\n/**\n * log :: a -> a\n *\n * log output is the same as input.\n * log causes side effect of console.log.\n */\nexport const log = passThrough(console.log);\n\n/**\n * spy :: a -> a\n *\n * spy output is the same as input.\n * spy causes side effect of console.log.\n */\nexport const spy = passThrough(a => console.log(deepInspect(a)));\n\n/**\n * minusOneToUndefined :: a -> a|boolean\n *\n * minusOneToUndefined output is the same as input or undefined if input is -1.\n */\nexport const minusOneToUndefined = a => isEqual(-1)(a) ? undefined: a;\n\n/**\n * inspectFunction :: (a -> b) -> string\n *\n * inspectFunction outputs name of named function or its conversion to string.\n */\nexport const inspectFunction = f => f.name ? f.name : String(f);\n\n/**\n * inspectArray :: [a] -> string\n *\n * inspectArray maps over input array [a] and outputs string representing it.\n */\nexport const inspectArray = a => `[${join(', ')(map(deepInspect)(a))}]`;\n\n/**\n * inspectString :: a -> string\n *\n * inspectString outputs string representing input.\n */\nexport const inspectString = a => `'${a}'`;\n\n/**\n * inspectObject :: a -> string\n *\n * inspectObject outputs string representing input.\n */\nexport const inspectObject = a =>\n  isFunction(a.inspect)\n    ? a.inspect()\n    : `{${join(', ')(map(join(': '))(map(k => [k, deepInspect(a[k])])(keysOf(a))))}}`\n\n/**\n * deepInspect :: a -> string\n *\n * deepInspect runs recursively over input and outputs string representing the input.\n */\nexport const deepInspect = a =>\n  isUndefined(a)\n    ? 'undefined'\n    : isNull(a)\n      ? 'null'\n      : isFunction(a)\n        ? inspectFunction(a)\n        : isArray(a)\n          ? inspectArray(a)\n          : isObject(a)\n            ? inspectObject(a)\n            : isString(a)\n              ? inspectString(a)\n              : String(a);","import {minusOneToUndefined} from './utils';\n\n/**\n * reduce :: a -> ((a, b) -> a) -> [b] -> a\n *\n * reduce executes input reducer function that over each member of input array [b] to output single value a.\n *\n * reduce executes functions in reverse order to reduceRight.\n */\nexport const reduce = initial => reducer => list => list.reduce(reducer, initial);\n\n/**\n * reduceRight :: a -> ((a, b) -> a) -> [b] -> a\n *\n * reduceRight executes input reducer function that over each member of input array [b] to output single value a.\n *\n * reduceRight executes functions in reverse order to reduce.\n */\nexport const reduceRight = initial => reducer => list => list.reduceRight(reducer, initial);\n\n/**\n * map :: (a -> b) -> [a] -> [b]\n *\n * map executes input mapper over each member of input array [a] to output new array [b].\n */\nexport const map = mapper => list => list.map(mapper);\n\n/**\n * filter :: (a -> boolean) -> [a] -> [b]\n *\n * filter executes input checker over each member of input array [a] to filter and output filtered new array [b].\n */\nexport const filter = checker => list => list.filter(checker);\n\n/**\n * find :: (a -> boolean) -> [a] -> [b]\n *\n * find executes input checker over each member of input array [a] and outputs the first array member that matches checker or undefined.\n */\nexport const find = checker => list => list.find(checker);\n\n/**\n * findIndex :: (a -> boolean) -> [a] -> [b]\n *\n * findIndex executes input checker over each member of input array [a] and outputs the index of first array member that matches checker or undefined.\n */\nexport const findIndex = checker => list => minusOneToUndefined(list.findIndex(checker));\n\n/**\n * join :: string -> [a] -> string\n *\n * join outputs a string created by joining input array members with input separator.\n */\nexport const join = separator => list => list.join(separator);\n\n/**\n * keysOf :: object -> [string]\n *\n * keysOf outputs array of string keys of input array or object.\n */\nexport const keysOf = Object.keys;\n\n/**\n * entriesOf :: object -> [[string, a]]\n *\n * entriesOf outputs array of arrays of string keys and raw values of input array or object.\n */\nexport const entriesOf = Object.entries;\n\n/**\n * everyOf :: (a -> boolean) -> [a] -> boolean\n *\n * everyOf outputs true if every element of input array passes input checker function as true.\n */\nexport const everyOf = checker => list => list.every(checker);\n\n/**\n * slice :: number -> number -> [a] -> [a]\n *\n * slice outputs selected array elements as an array based on input range.\n */\nexport const slice = end => start => list => list.slice(start, end);\n\n/**\n * some :: (a -> boolean) -> [a] -> boolean\n *\n * some outputs true if any element of input array passes input checker function as true.\n */\nexport const someOf = checker => list => list.some(checker);","import {deepInspect} from \"./utils\";\nimport {isNothing} from \"./conditional\";\n\n/**\n * Maybe.of() outputs instance of Maybe.\n * Maybe.of(a).inspect() outputs string Just(a) or Nothing.\n * Maybe.of(a) outputs Nothing for an input that is null, undefined, an empty string or an empty array.\n * Maybe.of(a) outputs Just for an input a that is not Nothing.\n * Maybe.of(a) outputs Nothing for an input a that is null or undefined.\n * Maybe.of(a).isJust() of an input a outputs true for a value that is Just.\n * Maybe.of(a).isNothing() of an input a outputs true for a value that is Nothing.\n * Maybe.of(a).map(a -> b) executes function over Maybe input a.\n * Maybe.of(a).map(a -> Just) outputs Just(Just).\n * Maybe.of(a).map(a -> b) does not execute over Nothing.\n * Maybe.of(a).flatMap(a -> b) executes function over Maybe input a returns its raw value.\n * Maybe.of(a).flatMap(a -> b) does not execute over Nothing.\n * Maybe.of(a).map(a -> b).ap(Maybe) provides applicative ability to apply functors to each other.\n * Maybe.of(Maybe -> Maybe -> c).ap(Maybe).ap(Maybe) provides applicative interface for a functor of a function.\n */\nexport class Maybe {\n  constructor(x) {\n    this.value = x;\n  }\n\n  static of(x) {\n    return isNothing(x) ? new Nothing(x) : new Just(x) ;\n  }\n}\n\nclass Just extends Maybe {\n  inspect() {\n    return `Just(${deepInspect(this.value)})`;\n  }\n\n  isNothing() {\n    return false;\n  }\n\n  isJust() {\n    return true;\n  }\n\n  map(fn) {\n    return Maybe.of(fn(this.value));\n  }\n\n  flatMap(fn) {\n    return fn(this.value);\n  }\n\n  ap(f) {\n    return f.map(this.value);\n  }\n}\n\nclass Nothing extends Maybe {\n  inspect () {\n    return 'Nothing';\n  }\n\n  isNothing() {\n    return true\n  }\n\n  isJust() {\n    return false;\n  }\n\n  map(fn) {\n    return this;\n  }\n\n  flatMap(fn) {\n    return this;\n  }\n\n  ap(f) {\n    return this;\n  }\n}\n\n/**\n * maybe :: a -> (b -> c) -> Maybe\n *\n * maybe outputs result of a function onJust if input Maybe is Just or outputs input error if input Maybe is Nothing.\n */\nexport const maybe = error => onJust => functorMaybe =>\n  functorMaybe.isNothing()\n    ? error\n    : onJust(functorMaybe.value);","import {deepInspect} from \"./utils\";\n\n/**\n * Either.of() outputs instance of Either.\n * Either.of(a) outputs instance of Right holding its input value.\n * Either.Right(a) outputs instance of Right holding its input value.\n * Either.Left(a) outputs instance of Left holding its input value.\n * Either.of(a).inspect() outputs string Right(a).\n * Either.Right(a).inspect() outputs string Right(a).\n * Either.Left(a).inspect() outputs string Left(a).\n * Either.of(a).isRight() always outputs true.\n * Either.Left(a).isLeft() outputs false if Either is Left.\n * Either.try(a -> b) outputs Right(b) if no error is thrown.\n * Either.try(a -> b) outputs Left(e.message) if error is thrown.\n * Either.of(a).map(a -> b) executes function over Either input a.\n * Either.of(a).map(a -> Right) outputs Right(Right).\n * Either.Left(a).map(a -> b) does not execute provided function and retains Left input value.\n * Either.of(a).flatMap(a -> b) executes function over Either input a returns its raw value through flatten.\n * Either.Left(a).flatMap(a -> b) does not execute provided function and retains Left input value.\n * Either.of(Either -> Either -> c).ap(Either).ap(Either) provides applicative interface.\n */\nexport class Either {\n  constructor(x) {\n    this.value = x;\n  }\n\n  static of(x) {\n    return new Right(x);\n  }\n\n  static Right(x) {\n    return new Right(x);\n  }\n\n  static Left(x) {\n    return new Left(x);\n  }\n\n  static try(fn) {\n    try {\n      return new Right(fn());\n    } catch(e) {\n      return new Left(e.message);\n    }\n  }\n}\n\nclass Right extends Either {\n  inspect() {\n    return `Right(${deepInspect(this.value)})`;\n  }\n\n  isLeft() {\n    return false;\n  }\n\n  isRight() {\n    return true;\n  }\n\n  map(fn) {\n    return Either.of(fn(this.value));\n  }\n\n  flatMap(fn) {\n    return fn(this.value);\n  }\n\n  ap(f) {\n    return f.map(this.value);\n  }\n}\n\nclass Left extends Either {\n  inspect() {\n    return `Left(${deepInspect(this.value)})`;\n  }\n\n  isLeft() {\n    return true;\n  }\n\n  isRight() {\n    return false;\n  }\n\n  map() {\n    return this;\n  }\n\n  flatMap() {\n    return this;\n  }\n\n  ap() {\n    return this;\n  }\n}\n\n/**\n * either :: (a -> b) -> (b -> c) -> Either\n *\n * either outputs result of a function onRight if input Either is Right or outputs result of a function onLeft if input Either is Left.\n */\nexport const either = onLeft => onRight => functorEither =>\n  functorEither.isLeft()\n    ? onLeft(functorEither.value)\n    : onRight(functorEither.value);","import {deepInspect} from \"./utils\";\n\n/**\n * SyncEffect.of() outputs instance of SyncEffect.\n * SyncEffect.wrap(a) is equal to SyncEffect.of(() -> a).\n * SyncEffect.of(() -> a).inspect() outputs string SyncEffect(a).\n * SyncEffect.of(() -> a).trigger() executes function provided as input of SyncEffect.\n * SyncEffect.of(() -> a).map(b -> c) composes function over SyncEffect input function.\n * SyncEffect.of(() -> a).map(b -> SyncEffect) outputs SyncEffect(SyncEffect).\n * SyncEffect.of(() -> a).flatMap(b -> SyncEffect) outputs SyncEffect.\n * SyncEffect.of(() -> a).map(a -> b).ap(SyncEffect) provides applicative ability to apply functors to each other.\n * SyncEffect.of(SyncEffect -> SyncEffect -> c).ap(SyncEffect).ap(SyncEffect) provides applicative interface for a functor of a function.\n * No input function is executed until trigger is called.\n */\nexport class SyncEffect {\n  constructor(fn) {\n    this.trigger = fn;\n  }\n\n  inspect() {\n    return `SyncEffect(${deepInspect(this.trigger)})`;\n  }\n\n  static of(x) {\n    return new SyncEffect(x);\n  }\n\n  static wrap(x) {\n    return new SyncEffect(() => x);\n  }\n\n  map(fn) {\n    return new SyncEffect(a => fn(this.trigger(a)));\n  }\n\n  flatMap(fn) {\n    return new SyncEffect(() => {\n      return this.map(fn).trigger().trigger();\n    })\n  }\n\n  ap(f) {\n    return this.flatMap(fn => f.map(fn));\n  }\n}","import {isTrue, passThrough, compose, upperCaseOf} from \"@7urtle/lambda\";\n\nconst createLogger = configuration => getLogger({\n  ...defaultConfiguration,\n  ...configuration\n});\n\nconst defaultDecorator = level => input =>\n  new Date().toLocaleString() + '; ' + upperCaseOf(level) + ': ' + input;\n\nconst defaultConfiguration = {\n  levels: {\n    log: true,\n    debug: true,\n    info: true,\n    warn: true,\n    error: true\n  },\n  library: console,\n  decorator: defaultDecorator\n};\n\nconst getLogger = configuration => ({\n  log: log(configuration)('log'),\n  debug: log(configuration)('debug'),\n  info: log(configuration)('info'),\n  warn: log(configuration)('warn'),\n  error: log(configuration)('error')\n});\n\nconst log = configuration => level =>\n  isTrue(configuration.levels[level])\n    ? passThrough(compose(configuration.library[level], configuration.decorator(level)))\n    : getNull;\n\nconst getNull = () => null;\n\nexport default createLogger;\n\nexport {\n  defaultDecorator,\n  getLogger,\n  log,\n  getNull\n};","import {minusOneToUndefined} from './utils';\n\n/**\n * trim :: string -> string\n *\n * trim output is a string without white characters around it.\n */\nexport const trim = string => string.trim();\n\n/**\n * testRegEx :: regex -> string -> boolean\n *\n * testRegEx outputs true if string b passes regular expression a.\n */\nexport const testRegEx = regex => string => regex.test(string);\n\n/**\n * substr :: number -> number -> string -> string\n * \n * substr outputs substring based on provided string, start and limit.\n */\nexport const substr = limit => start => string => string.substr(start, limit);\n\n/**\n * startsWith :: string -> string -> boolean\n * \n * startsWith outputs true if an input string starts with provided string.\n */\nexport const startsWith = substring => string => string.startsWith(substring);\n\n/**\n * endsWith :: string -> string -> boolean\n * \n * endsWith outputs true if an input string ends with provided string.\n */\nexport const endsWith = substring => string => string.endsWith(substring);\n\n/**\n * repeat :: number -> string -> string\n * \n * repeat outputs new string repeating input string inputed count of times.\n */\nexport const repeat = count => string => string.repeat(count);\n\n/**\n * replace :: string -> string -> string -> string\n * \n * replace outputs new string replacing input substring with input replacement string in input string.\n */\nexport const replace = replacement => substring => string => string.replace(substring, replacement);\n\n/**\n * search :: string/regex -> string -> number\n * \n * search outputs position of input substring or regular expression withing input string or undefined if it is not found.\n */\nexport const search = substring => string => minusOneToUndefined(string.search(substring));\n\n/**\n * split :: string -> string -> array\n * \n * split outputs and array of an input string split by the input substring.\n */\nexport const split = substring => string => string.split(substring);\n\n/**\n * lowerCaseOf :: string -> string\n * \n * lowerCaseOf ouputs the lower case version of input string.\n */\nexport const lowerCaseOf = string => string.toLowerCase();\n\n/**\n * upperCaseOf :: string -> string\n * \n * upperCaseOf ouputs the upper case version of input string.\n */\nexport const upperCaseOf = string => string.toUpperCase();","import {reduce, reduceRight} from \"./list\";\nimport {isString, isArray, isObject} from './conditional';\nimport {minusOneToUndefined, passThrough} from './utils';\n\n/**\n * identity :: a -> a\n *\n * identity output is the same as input.\n */\nexport const identity = a => a;\n\n/**\n * compose :: [(a -> b)] -> a -> (a -> b)\n *\n * compose output is a function composition\n * where each function receives input and hands over its output to the next function.\n *\n * compose executes functions in reverse order to pipe.\n *\n * compose(f,g)(x) is equivalent to f(g(x)).\n */\nexport const compose = (...fns) => a => reduceRight(a)((v, f) => f(v))(fns);\n\n/**\n * pipe :: [(a -> b)] -> a -> (a -> b)\n *\n * pipe output is a function composition\n * where each function receives input and hands over its output to the next function.\n *\n * pipe executes functions in reverse order to compose.\n *\n * pipe(f,g)(x) is equivalent to g(f(x)).\n */\nexport const pipe = (...fns) => a => reduce(a)((v, f) => f(v))(fns);\n\n/**\n * functorMap :: (a -> b) -> Functor -> Functor\n *\n * functorMap maps function over inputted functor outputting resulting functor.\n */\nexport const functorMap = fn => functor => functor.map(fn);\n\n/**\n * functorFlatMap :: (a -> Functor) -> Functor -> Functor\n *\n * functorFlatMap flatMaps function outputting functor over inputted functor outputting resulting functor.\n */\nexport const functorFlatMap = fn => functor => functor.flatMap(fn);\n\n/**\n * liftA2 (a -> b -> c) -> Applicative a -> Applicative b -> Applicative c\n *\n * liftA2 provides point-free way of writing calls over applicative functors and functions with arity 2.\n */\nexport const liftA2 = fn => ap1 => ap2 => ap1.map(fn).ap(ap2);\n\n/**\n * liftA3 (a -> b -> c -> d) -> Applicative a -> Applicative b -> Applicative c -> Applicative d\n *\n * liftA3 provides point-free way of writing calls over applicative functors and functions with arity 3.\n */\nexport const liftA3 = fn => ap1 => ap2 => ap3 => ap1.map(fn).ap(ap2).ap(ap3);\n\n/**\n * concat :: a -> a|boolean\n * \n * contact outputs concatenated inputs of strings, arrays and objects or outputs undefined for other types.\n */\nexport const concat = a => b =>\n  isString(b) || isArray(b)\n    ? b.concat(a)\n    : isObject(b)\n      ? {...b, ...a}\n      : undefined;\n\n/**\n * includes :: a -> b -> boolean\n *\n * includes output is true if b includes a.\n */\nexport const includes = a => b => b.includes(a);\n\n/**\n * indexOf :: a -> b -> number\n * \n * indexOf outputs position of input a within input b or undefined if it is not found.\n */\nexport const indexOf = a => b => minusOneToUndefined(b.indexOf(a));\n\n/**\n * lastIndexOf :: a -> b -> number\n * \n * lastIndexOf outputs position of input a withing input b looking from the end or it retuns undefined if it is not found.\n */\nexport const lastIndexOf = a => b => minusOneToUndefined(b.lastIndexOf(a));\n\n/**\n * memoize :: object -> (a -> b) -> a -> b\n *\n * memoize uses input memory to save output of input function and then uses it to lookup result on a repeated run\n */\nexport const memoize = memory => fn => a =>\n  a in memory ? memory[a] : (passThrough(b => memory[a] = b))(fn(a));","import {SyncEffect, Either, either, Maybe, maybe, identity} from \"@7urtle/lambda\";\nimport createLogger from \"@7urtle/logger\";\nimport commander from 'commander';\nimport fs from 'fs';\nimport readline from 'readline';\nimport path from 'path';\n\nconst logger = createLogger();\n\nconst program =\n  SyncEffect\n  .of(() => new commander.Command())\n  .map(a => a.version('0.0.1', '-v, --version', 'output the current version'))\n  .map(a => a.option('-i, --input <input>', 'input file or directory'))\n  .map(a => a.option('-o, --output <output>', 'output directory'))\n  .map(a => a.parse(process.argv));\n\nconst commanderFailed = logger => error => logger.error(`Documenter failed during initialisation with error: ${error}.`);\n\nconst getInput = program =>\n  (input =>\n    input.isNothing()\n      ? logger.error('Input is required argument. Try: $ documenter --input ./your/directory')\n      : logger.info(`Correct input ${input.value}`)\n  )(Maybe.of(program.input));\n\neither\n(commanderFailed(logger))\n(getInput)\n(Either.try(program.trigger));\n\nfs.statSync('../lambda/src/core.js').isFile();\n\nconst rl = readline.createInterface({\n  input: fs.createReadStream('../lambda/src/core.js')\n});\n\nlet line_no = 0;\n\n// event is emitted after each line\nrl.on('line', function(line) {\n  line_no++;\n  console.log(line);\n});\n\n// end\nrl.on('close', function(line) {\n  console.log('Total lines : ' + line_no);\n});\n//console.log(path.basename(path.dirname(fs.realpathSync(__filename))));\n//logger.log(fs.realpathSync(__filename));\n//logger.log(fs.realpathSync('../lambda/src/core.js'));"],"sourceRoot":""}