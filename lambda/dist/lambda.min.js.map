{"version":3,"sources":["webpack://lambda/webpack/universalModuleDefinition","webpack://lambda/webpack/bootstrap","webpack://lambda/./node_modules/@babel/runtime/helpers/classCallCheck.js","webpack://lambda/./node_modules/@babel/runtime/helpers/createClass.js","webpack://lambda/./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","webpack://lambda/./node_modules/@babel/runtime/helpers/getPrototypeOf.js","webpack://lambda/./node_modules/@babel/runtime/helpers/inherits.js","webpack://lambda/./node_modules/@babel/runtime/helpers/typeof.js","webpack://lambda/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://lambda/./node_modules/@babel/runtime/helpers/assertThisInitialized.js","webpack://lambda/./node_modules/@babel/runtime/helpers/setPrototypeOf.js","webpack://lambda/./src/conditional.js","webpack://lambda/./src/utils.js","webpack://lambda/./src/list.js","webpack://lambda/./src/core.js","webpack://lambda/./src/string.js","webpack://lambda/./src/Case.js","webpack://lambda/./src/Maybe.js","webpack://lambda/./src/Either.js","webpack://lambda/./src/SyncEffect.js","webpack://lambda/./src/AsyncEffect.js","webpack://lambda/./src/index.js"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","instance","Constructor","TypeError","_defineProperties","target","props","length","descriptor","configurable","writable","protoProps","staticProps","_typeof","assertThisInitialized","self","_getPrototypeOf","setPrototypeOf","getPrototypeOf","__proto__","subClass","superClass","constructor","_typeof2","obj","iterator","ReferenceError","_setPrototypeOf","isEqual","a","b","isNotEqual","isTrue","isFalse","isGreaterThan","isLessThan","isAtLeast","isAtMost","isTypeOf","typeOf","isString","isBoolean","isNull","isUndefined","isNumber","isObject","isArray","Array","isFunction","isLength","lengthOf","isNotLength","isEmpty","isNotEmpty","isZero","isNotZero","isNothing","isJust","typeof_default","passThrough","f","log","console","spy","deepInspect","minusOneToUndefined","undefined","inspectFunction","String","inspectArray","concat","join","map","inspectString","inspectObject","inspect","k","keysOf","reduce","initial","reducer","list","reduceRight","mapper","filter","checker","find","findIndex","separator","keys","entriesOf","entries","everyOf","every","slice","end","start","someOf","some","identity","compose","_len","arguments","fns","_key","v","pipe","_len2","_key2","functorMap","fn","functor","functorFlatMap","flatMap","liftA2","ap1","ap2","ap","liftA3","ap3","_objectSpread","includes","indexOf","lastIndexOf","trim","string","testRegEx","regex","test","substr","limit","startsWith","substring","endsWith","repeat","count","replace","replacement","search","split","lowerCaseOf","toLowerCase","upperCaseOf","toUpperCase","Case","x","classCallCheck_default","match","createClass_default","_this","_this2","Map","Maybe","Nothing","Just","of","maybe","error","onJust","functorMaybe","Either","Right","Left","e","message","either","onLeft","onRight","functorEither","isLeft","SyncEffect","trigger","AsyncEffect","Promise","resolve","reject","_this3","_","__webpack_exports__","list_findIndex","core_compose","core_pipe","core_concat","core_indexOf","core_lastIndexOf","utils_typeOf","utils_minusOneToUndefined","utils_inspectArray","utils_inspectObject","utils_deepInspect","conditional_isTypeOf","conditional_isLength","string_search","Case_Case","Maybe_Maybe","Either_Either","SyncEffect_SyncEffect","AsyncEffect_AsyncEffect"],"mappings":"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","file":"lambda.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"lambda\"] = factory();\n\telse\n\t\troot[\"lambda\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 9);\n","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","var _typeof = require(\"../helpers/typeof\");\n\nvar assertThisInitialized = require(\"./assertThisInitialized\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;","function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","import {typeOf, lengthOf} from \"./utils\";\n\n/**\n * isEqual :: a -> b -> boolean\n *\n * isEqual output is true if strict equality between a and b is true.\n * isEqual output is always false for comparison of objects and arrays.\n */\nexport const isEqual = a => b => a === b;\n\n/**\n * isNotEqual :: a -> b -> boolean\n *\n * isNotEqual output is true if strict equality between a and b is false.\n * isNotEqual output is always true for comparison of objects and arrays.\n */\nexport const isNotEqual = a => b => a !== b;\n\n/**\n * isTrue :: a -> boolean\n *\n * isTrue output is true if input is true.\n */\nexport const isTrue = isEqual(true);\n\n/**\n * isFalse :: a -> Boolean\n *\n * isFalse output is true if input is false.\n */\nexport const isFalse = isEqual(false);\n\n/**\n * isGreaterThan :: a -> b -> boolean\n *\n * isGreaterThan output is true if b is greater than a.\n */\nexport const isGreaterThan = a => b => b > a;\n\n/**\n * isLessThan :: a -> b -> boolean\n *\n * isLessThan output is true if b is less than a.\n */\nexport const isLessThan = a => b => b < a;\n\n/**\n * isAtLeast :: a -> b -> boolean\n *\n * isAtLeast output is true if b is greater or equal to a.\n */\nexport const isAtLeast = a => b => b >= a;\n\n/**\n * isAtMost :: a -> b -> boolean\n *\n * isAtMost output is true if b is less or equal to a.\n */\nexport const isAtMost = a => b => b <= a;\n\n/**\n * isTypeOf :: a -> b -> boolean\n *\n * isTypeOf output is true if b is a type of a.\n */\nexport const isTypeOf = a => b => isEqual(typeOf(b))(a);\n\n/**\n * isString :: a -> boolean\n *\n * isString output is true if b is a string.\n */\nexport const isString = isTypeOf('string');\n\n/**\n * isBoolean :: a -> boolean\n *\n * isBoolean output is true if b is a boolean.\n */\nexport const isBoolean = isTypeOf('boolean');\n\n/**\n * isNull :: a -> boolean\n *\n * isNull output is true if b is a null.\n */\nexport const isNull = isEqual(null);\n\n/**\n * isUndefined :: a -> boolean\n *\n * isUndefined output is true if b is an undefined.\n */\nexport const isUndefined = isTypeOf('undefined');\n\n/**\n * isNumber :: a -> boolean\n *\n * isNumber output is true if b is a number.\n */\nexport const isNumber = isTypeOf('number');\n\n/**\n * isObject :: a -> boolean\n *\n * isObject output is true if b is an object, array of null.\n */\nexport const isObject = isTypeOf('object');\n\n/**\n * isArray :: a -> boolean\n *\n * isArray output is true if b is an array.\n */\nexport const isArray = Array.isArray;\n\n/**\n * isFunction :: a -> boolean\n *\n * isFunction output is true if b is a function.\n */\nexport const isFunction = isTypeOf('function');\n\n/**\n * isLength :: (string|array) -> b -> boolean\n *\n * isLength output is true if b is a length of a.\n */\nexport const isLength = a => b => isEqual(lengthOf(b))(a);\n\n/**\n * isNotLength :: (string|array) -> b -> boolean\n *\n * isNotLength output is true if b is not a length of a.\n */\nexport const isNotLength = a => b => !isLength(a)(b);\n\n/**\n * isEmpty :: (string|array) -> boolean\n *\n * isEmpty output is true if input has a length of 0.\n * isEmpty output is always false if input is an object and not an array or a string.\n */\nexport const isEmpty = isLength(0);\n\n/**\n * isNotEmpty :: (string|array) -> boolean\n *\n * isNotEmpty output is true if input does not have a length of 0.\n * isNotEmpty output is always true if input is an object and not an array or a string.\n */\nexport const isNotEmpty = isNotLength(0);\n\n/**\n * isZero :: a -> boolean\n *\n * isZero output is true if a is 0.\n */\nexport const isZero = isEqual(0);\n\n/**\n * isNotZero :: a -> boolean\n *\n * isNotZero output is true if a is not 0.\n */\nexport const isNotZero = isNotEqual(0);\n\n/**\n * isNothing :: a -> boolean\n *\n * isNothing returns true if input is null, undefined or empty string or empty array.\n */\nexport const isNothing = a => isNull(a) || isUndefined(a) || isEmpty(a);\n\n/**\n * isJust :: a -> boolean\n *\n * isJust returns true if input is not null, undefined or empty string or empty array.\n */\nexport const isJust = a => !isNothing(a);","import {isArray, isEqual, isString, isObject, isFunction, isNull, isUndefined} from \"./conditional\";\nimport {keysOf, join, map} from \"./list\";\n\n/**\n * typeOf :: a -> string\n *\n * typeOf outputs type of its input a.\n */\nexport const typeOf = a => typeof a;\n\n/**\n * lengthOf :: (string|array) -> number\n */\nexport const lengthOf = a => a.length;\n\n/**\n * passThrough :: function -> a -> a\n *\n * passThrough output is the same as input a.\n * passThrough executes function passed as first argument.\n */\nexport const passThrough = f => a => {\n  f(a);\n  return a;\n};\n\n/**\n * log :: a -> a\n *\n * log output is the same as input.\n * log causes side effect of console.log.\n */\nexport const log = passThrough(console.log);\n\n/**\n * spy :: a -> a\n *\n * spy output is the same as input.\n * spy causes side effect of console.log.\n */\nexport const spy = passThrough(a => console.log(deepInspect(a)));\n\n/**\n * minusOneToUndefined :: a -> a|boolean\n *\n * minusOneToUndefined output is the same as input or undefined if input is -1.\n */\nexport const minusOneToUndefined = a => isEqual(-1)(a) ? undefined: a;\n\n/**\n * inspectFunction :: (a -> b) -> string\n *\n * inspectFunction outputs name of named function or its conversion to string.\n */\nexport const inspectFunction = f => f.name ? f.name : String(f);\n\n/**\n * inspectArray :: [a] -> string\n *\n * inspectArray maps over input array [a] and outputs string representing it.\n */\nexport const inspectArray = a => `[${join(', ')(map(deepInspect)(a))}]`;\n\n/**\n * inspectString :: a -> string\n *\n * inspectString outputs string representing input.\n */\nexport const inspectString = a => `'${a}'`;\n\n/**\n * inspectObject :: a -> string\n *\n * inspectObject outputs string representing input.\n */\nexport const inspectObject = a =>\n  isFunction(a.inspect)\n    ? a.inspect()\n    : `{${join(', ')(map(join(': '))(map(k => [k, deepInspect(a[k])])(keysOf(a))))}}`\n\n/**\n * deepInspect :: a -> string\n *\n * deepInspect runs recursively over input and outputs string representing the input.\n */\nexport const deepInspect = a =>\n  isUndefined(a)\n    ? 'undefined'\n    : isNull(a)\n      ? 'null'\n      : isFunction(a)\n        ? inspectFunction(a)\n        : isArray(a)\n          ? inspectArray(a)\n          : isObject(a)\n            ? inspectObject(a)\n            : isString(a)\n              ? inspectString(a)\n              : String(a);","import {minusOneToUndefined} from './utils';\n\n/**\n * reduce :: a -> ((a, b) -> a) -> [b] -> a\n *\n * reduce executes input reducer function that over each member of input array [b] to output single value a.\n *\n * reduce executes functions in reverse order to reduceRight.\n */\nexport const reduce = initial => reducer => list => list.reduce(reducer, initial);\n\n/**\n * reduceRight :: a -> ((a, b) -> a) -> [b] -> a\n *\n * reduceRight executes input reducer function that over each member of input array [b] to output single value a.\n *\n * reduceRight executes functions in reverse order to reduce.\n */\nexport const reduceRight = initial => reducer => list => list.reduceRight(reducer, initial);\n\n/**\n * map :: (a -> b) -> [a] -> [b]\n *\n * map executes input mapper over each member of input array [a] to output new array [b].\n */\nexport const map = mapper => list => list.map(mapper);\n\n/**\n * filter :: (a -> boolean) -> [a] -> [b]\n *\n * filter executes input checker over each member of input array [a] to filter and output filtered new array [b].\n */\nexport const filter = checker => list => list.filter(checker);\n\n/**\n * find :: (a -> boolean) -> [a] -> [b]\n *\n * find executes input checker over each member of input array [a] and outputs the first array member that matches checker or undefined.\n */\nexport const find = checker => list => list.find(checker);\n\n/**\n * findIndex :: (a -> boolean) -> [a] -> [b]\n *\n * findIndex executes input checker over each member of input array [a] and outputs the index of first array member that matches checker or undefined.\n */\nexport const findIndex = checker => list => minusOneToUndefined(list.findIndex(checker));\n\n/**\n * join :: string -> [a] -> string\n *\n * join outputs a string created by joining input array members with input separator.\n */\nexport const join = separator => list => list.join(separator);\n\n/**\n * keysOf :: object -> [string]\n *\n * keysOf outputs array of string keys of input array or object.\n */\nexport const keysOf = Object.keys;\n\n/**\n * entriesOf :: object -> [[string, a]]\n *\n * entriesOf outputs array of arrays of string keys and raw values of input array or object.\n */\nexport const entriesOf = Object.entries;\n\n/**\n * everyOf :: (a -> boolean) -> [a] -> boolean\n *\n * everyOf outputs true if every element of input array passes input checker function as true.\n */\nexport const everyOf = checker => list => list.every(checker);\n\n/**\n * slice :: number -> number -> [a] -> [a]\n *\n * slice outputs selected array elements as an array based on input range.\n */\nexport const slice = end => start => list => list.slice(start, end);\n\n/**\n * some :: (a -> boolean) -> [a] -> boolean\n *\n * some outputs true if any element of input array passes input checker function as true.\n */\nexport const someOf = checker => list => list.some(checker);","import {reduce, reduceRight} from \"./list\";\nimport {isString, isArray, isObject} from './conditional';\nimport {minusOneToUndefined} from './utils';\n\n/**\n * identity :: a -> a\n *\n * identity output is the same as input.\n */\nexport const identity = a => a;\n\n/**\n * compose :: [(a -> b)] -> a -> (a -> b)\n *\n * compose output is a function composition\n * where each function receives input and hands over its output to the next function.\n *\n * compose executes functions in reverse order to pipe.\n *\n * compose(f,g)(x) is equivalent to f(g(x)).\n */\nexport const compose = (...fns) => a => reduceRight(a)((v, f) => f(v))(fns);\n\n/**\n * pipe :: [(a -> b)] -> a -> (a -> b)\n *\n * pipe output is a function composition\n * where each function receives input and hands over its output to the next function.\n *\n * pipe executes functions in reverse order to compose.\n *\n * pipe(f,g)(x) is equivalent to g(f(x)).\n */\nexport const pipe = (...fns) => a => reduce(a)((v, f) => f(v))(fns);\n\n/**\n * functorMap :: (a -> b) -> Functor -> Functor\n *\n * functorMap maps function over inputted functor outputting resulting functor.\n */\nexport const functorMap = fn => functor => functor.map(fn);\n\n/**\n * functorFlatMap :: (a -> Functor) -> Functor -> Functor\n *\n * functorFlatMap flatMaps function outputting functor over inputted functor outputting resulting functor.\n */\nexport const functorFlatMap = fn => functor => functor.flatMap(fn);\n\n/**\n * liftA2 (a -> b -> c) -> Applicative a -> Applicative b -> Applicative c\n *\n * liftA2 provides point-free way of writing calls over applicative functors and functions with arity 2.\n */\nexport const liftA2 = fn => ap1 => ap2 => ap1.map(fn).ap(ap2);\n\n/**\n * liftA3 (a -> b -> c -> d) -> Applicative a -> Applicative b -> Applicative c -> Applicative d\n *\n * liftA3 provides point-free way of writing calls over applicative functors and functions with arity 3.\n */\nexport const liftA3 = fn => ap1 => ap2 => ap3 => ap1.map(fn).ap(ap2).ap(ap3);\n\n/**\n * concat :: a -> a|boolean\n * \n * contact outputs concatenated inputs of strings, arrays and objects or outputs undefined for other types.\n */\nexport const concat = a => b =>\n  isString(b) || isArray(b)\n    ? b.concat(a)\n    : isObject(b)\n      ? {...b, ...a}\n      : undefined;\n\n/**\n * includes :: a -> b -> boolean\n *\n * includes output is true if b includes a.\n */\nexport const includes = a => b => b.includes(a);\n\n/**\n * indexOf :: a -> b -> number\n * \n * indexOf outputs position of input a within input b or undefined if it is not found.\n */\nexport const indexOf = a => b => minusOneToUndefined(b.indexOf(a));\n\n/**\n * lastIndexOf :: a -> b -> number\n * \n * lastIndexOf outputs position of input a withing input b looking from the end or it retuns undefined if it is not found.\n */\nexport const lastIndexOf = a => b => minusOneToUndefined(b.lastIndexOf(a));","import {minusOneToUndefined} from './utils';\n\n/**\n * trim :: string -> string\n *\n * trim output is a string without white characters around it.\n */\nexport const trim = string => string.trim();\n\n/**\n * testRegEx :: regex -> string -> boolean\n *\n * testRegEx outputs true if string b passes regular expression a.\n */\nexport const testRegEx = regex => string => regex.test(string);\n\n/**\n * substr :: number -> number -> string -> string\n * \n * substr outputs substring based on provided string, start and limit.\n */\nexport const substr = limit => start => string => string.substr(start, limit);\n\n/**\n * startsWith :: string -> string -> boolean\n * \n * startsWith outputs true if an input string starts with provided string.\n */\nexport const startsWith = substring => string => string.startsWith(substring);\n\n/**\n * endsWith :: string -> string -> boolean\n * \n * endsWith outputs true if an input string ends with provided string.\n */\nexport const endsWith = substring => string => string.endsWith(substring);\n\n/**\n * repeat :: number -> string -> string\n * \n * repeat outputs new string repeating input string inputed count of times.\n */\nexport const repeat = count => string => string.repeat(count);\n\n/**\n * replace :: string -> string -> string -> string\n * \n * replace outputs new string replacing input substring with input replacement string in input string.\n */\nexport const replace = replacement => substring => string => string.replace(substring, replacement);\n\n/**\n * search :: string/regex -> string -> number\n * \n * search outputs position of input substring or regular expression withing input string or undefined if it is not found.\n */\nexport const search = substring => string => minusOneToUndefined(string.search(substring));\n\n/**\n * split :: string -> string -> array\n * \n * split outputs and array of an input string split by the input substring.\n */\nexport const split = substring => string => string.split(substring);\n\n/**\n * lowerCaseOf :: string -> string\n * \n * lowerCaseOf ouputs the lower case version of input string.\n */\nexport const lowerCaseOf = string => string.toLowerCase();\n\n/**\n * upperCaseOf :: string -> string\n * \n * upperCaseOf ouputs the upper case version of input string.\n */\nexport const upperCaseOf = string => string.toUpperCase();","import {deepInspect} from \"./utils\";\n\n/**\n * Case.of() outputs instance of Case.\n * Case.of([]).inspect() outputs string Case(a -> b).\n * Case.of([]).match(a) matches input a against map provided as input of Case.\n * Case.of([]).match(a) outputs undefined if no matching case is found.\n * Case.of([]).map(a -> b) composes function over Case match function.\n * Case.of([]).map(a -> Case) outputs Case(Case).\n * Case.of([]).flatMap(a -> Case) outputs Case.\n */\nexport class Case {\n  constructor(x) {\n    this.match = x;\n  }\n\n  inspect() {\n    return `Case(${deepInspect(this.match)})`;\n  }\n\n  static of(x) {\n    return new Case(\n      (x => a => x.get(a) || x.get('_') || undefined)(new Map(x))\n    );\n  }\n\n  map(fn) {\n    return new Case(a => fn(this.match(a)));\n  }\n\n  flatMap(fn) {\n    return new Case(a => this.map(fn).match(a).match(a));\n  }\n}","import {deepInspect} from \"./utils\";\nimport {isNothing} from \"./conditional\";\n\n/**\n * Maybe.of() outputs instance of Maybe.\n * Maybe.of(a).inspect() outputs string Just(a) or Nothing.\n * Maybe.of(a) outputs Nothing for an input that is null, undefined, an empty string or an empty array.\n * Maybe.of(a) outputs Just for an input a that is not Nothing.\n * Maybe.of(a) outputs Nothing for an input a that is null or undefined.\n * Maybe.of(a).isJust() of an input a outputs true for a value that is Just.\n * Maybe.of(a).isNothing() of an input a outputs true for a value that is Nothing.\n * Maybe.of(a).map(a -> b) executes function over Maybe input a.\n * Maybe.of(a).map(a -> Just) outputs Just(Just).\n * Maybe.of(a).map(a -> b) does not execute over Nothing.\n * Maybe.of(a).flatMap(a -> b) executes function over Maybe input a returns its raw value.\n * Maybe.of(a).flatMap(a -> b) does not execute over Nothing.\n * Maybe.of(a).map(a -> b).ap(Maybe) provides applicative ability to apply functors to each other.\n * Maybe.of(Maybe -> Maybe -> c).ap(Maybe).ap(Maybe) provides applicative interface for a functor of a function.\n */\nexport class Maybe {\n  constructor(x) {\n    this.value = x;\n  }\n\n  static of(x) {\n    return isNothing(x) ? new Nothing(x) : new Just(x) ;\n  }\n}\n\nclass Just extends Maybe {\n  inspect() {\n    return `Just(${deepInspect(this.value)})`;\n  }\n\n  isNothing() {\n    return false;\n  }\n\n  isJust() {\n    return true;\n  }\n\n  map(fn) {\n    return Maybe.of(fn(this.value));\n  }\n\n  flatMap(fn) {\n    return fn(this.value);\n  }\n\n  ap(f) {\n    return f.map(this.value);\n  }\n}\n\nclass Nothing extends Maybe {\n  inspect () {\n    return 'Nothing';\n  }\n\n  isNothing() {\n    return true\n  }\n\n  isJust() {\n    return false;\n  }\n\n  map(fn) {\n    return this;\n  }\n\n  flatMap(fn) {\n    return this;\n  }\n\n  ap(f) {\n    return this;\n  }\n}\n\n/**\n * maybe :: a -> (b -> c) -> Maybe\n *\n * maybe outputs result of a function onJust if input Maybe is Just or outputs input error if input Maybe is Nothing.\n */\nexport const maybe = error => onJust => functorMaybe =>\n  functorMaybe.isNothing()\n    ? error\n    : onJust(functorMaybe.value);","import {deepInspect} from \"./utils\";\n\n/**\n * Either.of() outputs instance of Either.\n * Either.of(a) outputs instance of Right holding its input value.\n * Either.Right(a) outputs instance of Right holding its input value.\n * Either.Left(a) outputs instance of Left holding its input value.\n * Either.of(a).inspect() outputs string Right(a).\n * Either.Right(a).inspect() outputs string Right(a).\n * Either.Left(a).inspect() outputs string Left(a).\n * Either.of(a).isRight() always outputs true.\n * Either.Left(a).isLeft() outputs false if Either is Left.\n * Either.try(a -> b) outputs Right(b) if no error is thrown.\n * Either.try(a -> b) outputs Left(e.message) if error is thrown.\n * Either.of(a).map(a -> b) executes function over Either input a.\n * Either.of(a).map(a -> Right) outputs Right(Right).\n * Either.Left(a).map(a -> b) does not execute provided function and retains Left input value.\n * Either.of(a).flatMap(a -> b) executes function over Either input a returns its raw value through flatten.\n * Either.Left(a).flatMap(a -> b) does not execute provided function and retains Left input value.\n * Either.of(Either -> Either -> c).ap(Either).ap(Either) provides applicative interface.\n */\nexport class Either {\n  constructor(x) {\n    this.value = x;\n  }\n\n  static of(x) {\n    return new Right(x);\n  }\n\n  static Right(x) {\n    return new Right(x);\n  }\n\n  static Left(x) {\n    return new Left(x);\n  }\n\n  static try(fn) {\n    try {\n      return new Right(fn());\n    } catch(e) {\n      return new Left(e.message);\n    }\n  }\n}\n\nclass Right extends Either {\n  inspect() {\n    return `Right(${deepInspect(this.value)})`;\n  }\n\n  isLeft() {\n    return false;\n  }\n\n  isRight() {\n    return true;\n  }\n\n  map(fn) {\n    return Either.of(fn(this.value));\n  }\n\n  flatMap(fn) {\n    return fn(this.value);\n  }\n\n  ap(f) {\n    return f.map(this.value);\n  }\n}\n\nclass Left extends Either {\n  inspect() {\n    return `Left(${deepInspect(this.value)})`;\n  }\n\n  isLeft() {\n    return true;\n  }\n\n  isRight() {\n    return false;\n  }\n\n  map() {\n    return this;\n  }\n\n  flatMap() {\n    return this;\n  }\n\n  ap() {\n    return this;\n  }\n}\n\n/**\n * either :: (a -> b) -> (b -> c) -> Either\n *\n * either outputs result of a function onRight if input Either is Right or outputs result of a function onLeft if input Either is Left.\n */\nexport const either = onLeft => onRight => functorEither =>\n  functorEither.isLeft()\n    ? onLeft(functorEither.value)\n    : onRight(functorEither.value);","import {deepInspect} from \"./utils\";\n\n/**\n * SyncEffect.of() outputs instance of SyncEffect.\n * SyncEffect.wrap(a) is equal to SyncEffect.of(() -> a).\n * SyncEffect.of(() -> a).inspect() outputs string SyncEffect(a).\n * SyncEffect.of(() -> a).trigger() executes function provided as input of SyncEffect.\n * SyncEffect.of(() -> a).map(b -> c) composes function over SyncEffect input function.\n * SyncEffect.of(() -> a).map(b -> SyncEffect) outputs SyncEffect(SyncEffect).\n * SyncEffect.of(() -> a).flatMap(b -> SyncEffect) outputs SyncEffect.\n * SyncEffect.of(() -> a).map(a -> b).ap(SyncEffect) provides applicative ability to apply functors to each other.\n * SyncEffect.of(SyncEffect -> SyncEffect -> c).ap(SyncEffect).ap(SyncEffect) provides applicative interface for a functor of a function.\n * No input function is executed until trigger is called.\n */\nexport class SyncEffect {\n  constructor(fn) {\n    this.trigger = fn;\n  }\n\n  inspect() {\n    return `SyncEffect(${deepInspect(this.trigger)})`;\n  }\n\n  static of(x) {\n    return new SyncEffect(x);\n  }\n\n  static wrap(x) {\n    return new SyncEffect(() => x);\n  }\n\n  map(fn) {\n    return new SyncEffect(a => fn(this.trigger(a)));\n  }\n\n  flatMap(fn) {\n    return new SyncEffect(() => {\n      return this.map(fn).trigger().trigger();\n    })\n  }\n\n  ap(f) {\n    return this.flatMap(fn => f.map(fn));\n  }\n}","import {deepInspect} from \"./utils\";\n\n/**\n * AsyncEffect.of() outputs instance of AsyncEffect.\n * AsyncEffect.of(() -> a).inspect() outputs string AsyncEffect(a).\n * AsyncEffect.wrap(a) is equal to AsyncEffect.of((_, resolve) -> resolve(a)).\n * AsyncEffect.of((a, b) -> c).promise() outputs JavaScript promise.\n * AsyncEffect.of((a, b) -> c).trigger(d -> e, f -> g) for resolving async function resolves.\n * AsyncEffect.of((a, b) -> c).trigger(d -> e, f -> g) for rejecting async function rejects.\n * AsyncEffect.of((a, b) -> c).map(b -> c) composes function over AsyncEffect input function.\n * AsyncEffect.of((a, b) -> c).map(b -> AsyncEffect) outputs AsyncEffect(AsyncEffect).\n * AsyncEffect.of((a, b) -> c).flatMap(b -> AsyncEffect) outputs AsyncEffect.\n * AsyncEffect.of((a, b) -> c).map(a -> b).ap(AsyncEffect) provides applicative ability to apply functors to each other.\n * AsyncEffect.of(AsyncEffect -> AsyncEffect -> c).ap(AsyncEffect).ap(AsyncEffect) provides applicative interface for a functor of a function.\n * No input function is executed until trigger is called.\n */\nexport class AsyncEffect {\n  constructor(fn) {\n    this.trigger = fn;\n  }\n\n  inspect() {\n    return `AsyncEffect(${deepInspect(this.trigger)})`;\n  }\n\n  static of(x) {\n    return new AsyncEffect(x);\n  }\n\n  static wrap(x) {\n    return new AsyncEffect((_, resolve) => resolve(x));\n  }\n\n  promise() {\n    return new Promise((resolve, reject) => this.trigger(reject, resolve));\n  }\n\n  map(fn) {\n    return new AsyncEffect((reject, resolve) => this.trigger(reject, a => resolve(fn(a))));\n  }\n\n  flatMap(fn) {\n    return new AsyncEffect((reject, resolve) => this.trigger(reject, x => fn(x).trigger(reject, resolve)));\n  }\n\n  ap(f) {\n    return this.flatMap(fn => f.map(fn));\n  }\n}","export * from './list';\nexport * from './core';\nexport * from './utils';\nexport * from './conditional';\nexport * from './string';\nexport * from './Case';\nexport * from './Maybe';\nexport * from './Either';\nexport * from './SyncEffect';\nexport * from './AsyncEffect';"],"sourceRoot":""}