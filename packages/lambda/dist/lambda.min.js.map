{"version":3,"sources":["webpack://lambda/webpack/universalModuleDefinition","webpack://lambda/webpack/bootstrap","webpack://lambda/./src/list.js","webpack://lambda/./src/core.js","webpack://lambda/./src/conditional.js","webpack://lambda/./src/utils.js","webpack://lambda/./src/string.js","webpack://lambda/./src/maybe.js","webpack://lambda/./src/either.js","webpack://lambda/./src/syncEffect.js","webpack://lambda/./src/index.js"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","reduce","initial","reducer","list","reduceRight","map","mapper","identity","a","compose","_len","arguments","length","fns","Array","_key","v","f","pipe","_len2","_key2","isEqual","b","isNotEqual","isTrue","isFalse","isGreaterThan","isLessThan","isAtLeast","isAtMost","isTypeOf","_typeof","isString","isBoolean","isNull","isUndefined","isNumber","isObject","isArray","isFunction","isLength","isNotLength","isEmpty","isNotEmpty","isNothing","isJust","passThrough","log","console","inspectFunction","toString","inspectArray","concat","deepInspect","join","inspectString","inspectObject","inspect","keys","k","kv","String","trim","includes","testRegEx","test","Maybe","x","_classCallCheck","_createClass","Nothing","Just","fn","of","traverse","Either","either_classCallCheck","either_createClass","Right","Left","e","message","syncEffect","syncEffect_classCallCheck","trigger","flatMap","_this","__webpack_exports__","list_map","core_compose","core_pipe","utils_inspectObject","utils_deepInspect","maybe_Maybe","syncEffect_syncEffect"],"mappings":"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","file":"lambda.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"lambda\"] = factory();\n\telse\n\t\troot[\"lambda\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\n * reduce :: a -> ((a, b) -> a) -> [b] -> a\n *\n * reduce executes input reducer function that over each member of input array [b] to output single value a.\n *\n * reduce executes functions in reverse order to reduceRight.\n */\nexport const reduce = initial => reducer => list => list.reduce(reducer, initial);\n\n/**\n * reduceRight :: a -> ((a, b) -> a) -> [b] -> a\n *\n * reduceRight executes input reducer function that over each member of input array [b] to output single value a.\n *\n * reduceRight executes functions in reverse order to reduce.\n */\nexport const reduceRight = initial => reducer => list => list.reduceRight(reducer, initial);\n\n/**\n * map :: (a -> b) -> [a] -> [b]\n *\n * map executes input mapper over each member of input array [a] to output new array [b].\n */\nexport const map = mapper => list => list.map(mapper);","import {reduce, reduceRight} from \"./list\";\n\n/**\n * identity :: a -> a\n *\n * identity output is the same as input.\n */\nexport const identity = a => a;\n\n/**\n * compose :: [(a -> b)] -> a -> (a -> b)\n *\n * compose output is a function composition\n * where each function receives input and hands over its output to the next function.\n *\n * compose executes functions in reverse order to pipe.\n *\n * compose(f,g)(x) is equivalent to f(g(x)).\n */\nexport const compose = (...fns) => a => reduceRight(a)((v, f) => f(v))(fns);\n\n/**\n * pipe :: [(a -> b)] -> a -> (a -> b)\n *\n * pipe output is a function composition\n * where each function receives input and hands over its output to the next function.\n *\n * pipe executes functions in reverse order to compose.\n *\n * pipe(f,g)(x) is equivalent to g(f(x)).\n */\nexport const pipe = (...fns) => a => reduce(a)((v, f) => f(v))(fns);","/**\n * isEqual :: a -> b -> boolean\n *\n * isEqual output is true if strict equality between a and b is true.\n * isEqual output is always false for comparison of objects and arrays.\n */\nexport const isEqual = a => b => a === b;\n\n/**\n * isNotEqual :: a -> b -> boolean\n *\n * isNotEqual output is true if strict equality between a and b is false.\n * isNotEqual output is always true for comparison of objects and arrays.\n */\nexport const isNotEqual = a => b => a !== b;\n\n/**\n * isTrue :: a -> boolean\n *\n * isTrue output is true if input is true.\n */\nexport const isTrue = isEqual(true);\n\n/**\n * isFalse :: a -> Boolean\n *\n * isFalse output is true if input is false.\n */\nexport const isFalse = isEqual(false);\n\n/**\n * isGreaterThan :: a -> b -> boolean\n *\n * isGreaterThan output is true if b is greater than a.\n */\nexport const isGreaterThan = a => b => b > a;\n\n/**\n * isLessThan :: a -> b -> boolean\n *\n * isLessThan output is true if b is less than a.\n */\nexport const isLessThan = a => b => b < a;\n\n/**\n * isAtLeast :: a -> b -> boolean\n *\n * isAtLeast output is true if b is greater or equal to a.\n */\nexport const isAtLeast = a => b => b >= a;\n\n/**\n * isAtMost :: a -> b -> boolean\n *\n * isAtMost output is true if b is less or equal to a.\n */\nexport const isAtMost = a => b => b <= a;\n\n/**\n * isTypeOf :: a -> b -> boolean\n *\n * isTypeOf output is true if b is a type of a.\n */\nexport const isTypeOf = a => b => isEqual(typeof b)(a);\n\n/**\n * isString :: a -> boolean\n *\n * isString output is true if b is a string.\n */\nexport const isString = isTypeOf('string');\n\n/**\n * isBoolean :: a -> boolean\n *\n * isBoolean output is true if b is a boolean.\n */\nexport const isBoolean = isTypeOf('boolean');\n\n/**\n * isNull :: a -> boolean\n *\n * isNull output is true if b is a null.\n */\nexport const isNull = isEqual(null);\n\n/**\n * isUndefined :: a -> boolean\n *\n * isUndefined output is true if b is an undefined.\n */\nexport const isUndefined = isTypeOf('undefined');\n\n/**\n * isNumber :: a -> boolean\n *\n * isNumber output is true if b is a number.\n */\nexport const isNumber = isTypeOf('number');\n\n/**\n * isObject :: a -> boolean\n *\n * isObject output is true if b is an object, array of null.\n */\nexport const isObject = isTypeOf('object');\n\n/**\n * isArray :: a -> boolean\n *\n * isArray output is true if b is an array.\n */\nexport const isArray = Array.isArray;\n\n/**\n * isFunction :: a -> boolean\n *\n * isFunction output is true if b is a function.\n */\nexport const isFunction = isTypeOf('function');\n\n/**\n * isLength :: (string|array) -> b -> boolean\n *\n * isLength output is true if b is a length of a.\n */\nexport const isLength = a => b => isEqual(b.length)(a);\n\n/**\n * isNotLength :: (string|array) -> b -> boolean\n *\n * isNotLength output is true if b is not a length of a.\n */\nexport const isNotLength = a => b => isNotEqual(b.length)(a);\n\n/**\n * isEmpty :: (string|array) -> boolean\n *\n * isEmpty output is true if b is a length of 0.\n * isEmpty output is always false if b is an object and not an array or a string.\n */\nexport const isEmpty = isLength(0);\n\n/**\n * isNotEmpty :: (string|array) -> boolean\n *\n * isNotEmpty output is true if b is not a length of 0.\n * isNotEmpty output is always true if b is an object and not an array or a string.\n */\nexport const isNotEmpty = isNotLength(0);\n\n/**\n * isNothing :: a -> boolean\n *\n * isNothing returns true if input is null, undefined or empty string or empty array.\n */\nexport const isNothing = a => isNull(a) || isUndefined(a) || isEmpty(a);\n\n/**\n * isJust :: a -> boolean\n *\n * isJust returns true if input is not null, undefined or empty string or empty array.\n */\nexport const isJust = a => !isNothing(a);","import {isArray, isString, isObject, isFunction} from \"./conditional\";\n\n/**\n * passThrough :: function -> a -> a\n *\n * passThrough output is the same as input a.\n * passThrough executes function passed as first argument.\n */\nexport const passThrough = f => a => {\n  f(a);\n  return a;\n};\n\n/**\n * log :: a -> a\n *\n * log output is the same as input.\n * log causes side effect of console.log.\n */\nexport const log = passThrough(console.log);\n\n/**\n * inspectFunction :: (a -> b) -> string\n *\n * inspectFunction outputs name of named function or its conversion to string.\n */\nexport const inspectFunction = f => f.name ? f.name : f.toString();\n\n/**\n * inspectArray :: [a] -> string\n *\n * inspectArray maps over input array [a] and outputs string representing it.\n */\nexport const inspectArray = a => `[${a.map(deepInspect).join(', ')}]`;\n\n/**\n * inspectString :: a -> string\n *\n * inspectString outputs string representing input.\n */\nexport const inspectString = a => `'${a}'`;\n\n/**\n * inspectObject :: a -> string\n *\n * inspectObject outputs string representing input.\n */\nexport const inspectObject = a =>\n  isFunction(a.inspect)\n    ? a.inspect()\n    : `{${Object.keys(a).map(k => [k, deepInspect(a[k])]).map(kv => kv.join(': ')).join(', ')}}`;\n\n/**\n * deepInspect :: a -> string\n *\n * deepInspect runs recursively over input and outputs string representing the input.\n */\nexport const deepInspect = a =>\n  isFunction(a)\n    ? inspectFunction(a)\n    : isArray(a)\n      ? inspectArray(a)\n      : isObject(a)\n        ? inspectObject(a)\n        : isString(a)\n          ? inspectString(a)\n          : String(a);","/**\n * trim :: string -> string\n *\n * trim output is a string without white characters around it.\n */\nexport const trim = a => a.trim();\n\n/**\n * includes :: string -> string -> boolean\n *\n * includes output is true if b includes a.\n */\nexport const includes = a => b => b.includes(a);\n\n/**\n * testRegEx :: regex -> string -> boolean\n *\n * testRegEx returns true if string b passes regular expression a.\n */\nexport const testRegEx = a => b => a.test(b);","import {deepInspect} from \"./utils\";\nimport {isNothing} from \"./conditional\";\nimport {identity} from \"./core\";\n\n/**\n * Maybe.of() outputs instance of Maybe.\n * Maybe.of(a).inspect() outputs string Just(a) or Nothing.\n * Maybe.of(a) outputs Nothing for an input that is null, undefined, an empty string or an empty array.\n * Maybe.of(a) outputs Just for an input a that is not Nothing.\n * Maybe.of(a) outputs Nothing for an input a that is null or undefined.\n * Maybe.of(a).isJust() of an input a outputs true for a value that is Just.\n * Maybe.of(a).isNothing() of an input a outputs true for a value that is Nothing.\n * Maybe.of(a).map(a -> b) executes function over Maybe input a.\n * Maybe.of(a).map(a -> Just) outputs Just(Just).\n * Maybe.of(a).map(a -> b) does not execute over Nothing.\n * Maybe.of(a).flatMap(a -> b) executes function over Maybe input a returns its raw value.\n * Maybe.of(a).flatMap(a -> b) does not execute over Nothing.\n */\nexport class Maybe {\n  constructor(x) {\n    this.value = x;\n  }\n\n  static of(x) {\n    return isNothing(x) ? new Nothing(x) : new Just(x) ;\n  }\n}\n\nclass Just extends Maybe {\n  inspect() {\n    return `Just(${deepInspect(this.value)})`;\n  }\n\n  isNothing() {\n    return false;\n  }\n\n  isJust() {\n    return true;\n  }\n\n  map(fn) {\n    return Maybe.of(fn(this.value));\n  }\n\n  ap(f) {\n    return f.map(this.value);\n  }\n\n  flatMap(fn) {\n    return fn(this.value);\n  }\n\n  sequence(of) {\n    this.traverse(of, identity);\n  }\n\n  traverse(of, fn) {\n    return fn(this.value).map(Maybe.of);\n  }\n}\n\nclass Nothing extends Maybe {\n  inspect () {\n    return 'Nothing';\n  }\n\n  isNothing() {\n    return true\n  }\n\n  isJust() {\n    return false;\n  }\n\n  map(fn) {\n    return this;\n  }\n\n  ap(f) {\n    return this;\n  }\n\n  flatMap(fn) {\n    return this;\n  }\n\n  sequence(of) {\n    return of(this);\n  }\n\n  traverse(of, fn) {\n    return of(this);\n  }\n}","import {deepInspect} from \"./utils\";\nimport {identity} from \"./core\";\n\n/**\n * Either.of() outputs instance of Either.\n * Either.of(a) outputs instance of Right holding its input value.\n * Either.Right(a) outputs instance of Right holding its input value.\n * Either.Left(a) outputs instance of Left holding its input value.\n * Either.of(a).inspect() outputs string Right(a).\n * Either.Right(a).inspect() outputs string Right(a).\n * Either.Left(a).inspect() outputs string Left(a).\n * Either.of(a).isRight() always outputs true.\n * Either.Left(a).isLeft() outputs false if Either is Left.\n * Either.try(a -> b) outputs Right(b) if no error is thrown.\n * Either.try(a -> b) outputs Left(e.message) if error is thrown.\n * Either.of(a).map(a -> b) executes function over Either input a.\n * Either.of(a).map(a -> Right) outputs Right(Right).\n * Either.Left(a).map(a -> b) does not execute provided function and retains Left input value.\n * Either.of(a).flatMap(a -> b) executes function over Either input a returns its raw value through flatten.\n * Either.Left(a).flatMap(a -> b) does not execute provided function and retains Left input value.\n */\nexport class Either {\n  constructor(x) {\n    this.value = x;\n  }\n\n  static of(x) {\n    return new Right(x);\n  }\n\n  static Right(x) {\n    return new Right(x);\n  }\n\n  static Left(x) {\n    return new Left(x);\n  }\n\n  static try(fn) {\n    try {\n      return new Right(fn());\n    } catch(e) {\n      return new Left(e.message);\n    }\n  }\n}\n\nclass Right extends Either {\n  inspect() {\n    return `Right(${deepInspect(this.value)})`;\n  }\n\n  isLeft() {\n    return false;\n  }\n\n  isRight() {\n    return true;\n  }\n\n  map(fn) {\n    return Either.of(fn(this.value));\n  }\n\n  ap(f) {\n    return f.map(this.value);\n  }\n\n  flatMap(fn) {\n    return fn(this.value);\n  }\n\n  sequence(of) {\n    return this.traverse(of, identity);\n  }\n\n  traverse(of, fn) {\n    fn(this.value).map(Either.of);\n  }\n}\n\nclass Left extends Either {\n  inspect() {\n    return `Left(${deepInspect(this.value)})`;\n  }\n\n  isLeft() {\n    return true;\n  }\n\n  isRight() {\n    return false;\n  }\n\n  map() {\n    return this;\n  }\n\n  ap() {\n    return this;\n  }\n\n  flatMap() {\n    return this;\n  }\n\n  sequence(of) {\n    return of(this);\n  }\n\n  traverse(of, fn) {\n    return of(this);\n  }\n}","import {compose} from \"./core\";\nimport {deepInspect} from \"./utils\";\n\n/**\n * syncEffect.of() outputs instance of syncEffect.\n * syncEffect.of(a).inspect() outputs string syncEffect(a).\n * syncEffect.of(a).trigger() executes function provided as input of syncEffect.\n * syncEffect.of(a).map(b -> c) composes function over syncEffect input function.\n * syncEffect.of(a).map(b -> syncEffect) outputs syncEffect(syncEffect).\n * syncEffect.of(a).flatMap(b -> syncEffect) outputs syncEffect.\n * No input function is executed until trigger is called.\n */\nexport class syncEffect {\n  constructor(fn) {\n    this.trigger = fn;\n  }\n\n  inspect() {\n    return `syncEffect(${deepInspect(this.trigger)})`;\n  }\n\n  static of(x) {\n    return new syncEffect(x);\n  }\n\n  map(fn) {\n    return new syncEffect(compose(fn, this.trigger));\n  }\n\n  ap(f) {\n    return this.flatMap(fn => f.map(fn));\n  }\n\n  flatMap(fn) {\n    return new syncEffect(() => {\n      return this.map(fn).trigger().trigger();\n    })\n  }\n}","export * from './list';\nexport * from './core';\nexport * from './utils';\nexport * from './conditional';\nexport * from './string';\nexport * from './maybe';\nexport * from './either';\nexport * from './syncEffect';"],"sourceRoot":""}