{"version":3,"sources":["webpack://lambda/webpack/universalModuleDefinition","webpack://lambda/webpack/bootstrap","webpack://lambda//Users/martin.novak/code/7urtle/node_modules/@babel/runtime/helpers/classCallCheck.js","webpack://lambda//Users/martin.novak/code/7urtle/node_modules/@babel/runtime/helpers/createClass.js","webpack://lambda//Users/martin.novak/code/7urtle/node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","webpack://lambda//Users/martin.novak/code/7urtle/node_modules/@babel/runtime/helpers/getPrototypeOf.js","webpack://lambda//Users/martin.novak/code/7urtle/node_modules/@babel/runtime/helpers/inherits.js","webpack://lambda//Users/martin.novak/code/7urtle/node_modules/@babel/runtime/helpers/typeof.js","webpack://lambda//Users/martin.novak/code/7urtle/node_modules/@babel/runtime/helpers/assertThisInitialized.js","webpack://lambda//Users/martin.novak/code/7urtle/node_modules/@babel/runtime/helpers/setPrototypeOf.js","webpack://lambda/./src/list.js","webpack://lambda/./src/core.js","webpack://lambda/./src/conditional.js","webpack://lambda/./src/utils.js","webpack://lambda/./src/string.js","webpack://lambda/./src/Maybe.js","webpack://lambda/./src/Either.js","webpack://lambda/./src/SyncEffect.js","webpack://lambda/./src/AsyncEffect.js","webpack://lambda/./src/index.js"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","instance","Constructor","TypeError","_defineProperties","target","props","length","descriptor","configurable","writable","protoProps","staticProps","_typeof","assertThisInitialized","self","_getPrototypeOf","setPrototypeOf","getPrototypeOf","__proto__","subClass","superClass","constructor","_typeof2","obj","iterator","ReferenceError","_setPrototypeOf","reduce","initial","reducer","list","reduceRight","map","mapper","identity","a","compose","_len","arguments","fns","Array","_key","v","f","pipe","_len2","_key2","functorMap","fn","functor","functorFlatMap","flatMap","liftA2","ap1","ap2","ap","liftA3","ap3","isEqual","b","isNotEqual","isTrue","isFalse","isGreaterThan","isLessThan","isAtLeast","isAtMost","isTypeOf","typeOf","isString","isBoolean","isNull","isUndefined","isNumber","isObject","isArray","isFunction","isLength","lengthOf","isNotLength","isEmpty","isNotEmpty","isZero","isNotZero","isNothing","isJust","typeof_default","passThrough","log","console","inspectFunction","toString","inspectArray","concat","deepInspect","join","inspectString","inspectObject","inspect","keys","k","kv","String","trim","string","includes","what","testRegEx","regex","test","substr","limit","start","startsWith","Maybe","x","classCallCheck_default","createClass_default","Nothing","Just","of","traverse","Either","Right","Left","e","message","SyncEffect","trigger","_this","AsyncEffect","Promise","resolve","reject","_this2","_this3","_","__webpack_exports__","list_map","core_compose","core_pipe","utils_typeOf","utils_inspectObject","utils_deepInspect","conditional_isTypeOf","conditional_isLength","Maybe_Maybe","Either_Either","SyncEffect_SyncEffect","AsyncEffect_AsyncEffect"],"mappings":"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","file":"lambda.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"lambda\"] = factory();\n\telse\n\t\troot[\"lambda\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","var _typeof = require(\"../helpers/typeof\");\n\nvar assertThisInitialized = require(\"./assertThisInitialized\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;","function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","/**\n * reduce :: a -> ((a, b) -> a) -> [b] -> a\n *\n * reduce executes input reducer function that over each member of input array [b] to output single value a.\n *\n * reduce executes functions in reverse order to reduceRight.\n */\nexport const reduce = initial => reducer => list => list.reduce(reducer, initial);\n\n/**\n * reduceRight :: a -> ((a, b) -> a) -> [b] -> a\n *\n * reduceRight executes input reducer function that over each member of input array [b] to output single value a.\n *\n * reduceRight executes functions in reverse order to reduce.\n */\nexport const reduceRight = initial => reducer => list => list.reduceRight(reducer, initial);\n\n/**\n * map :: (a -> b) -> [a] -> [b]\n *\n * map executes input mapper over each member of input array [a] to output new array [b].\n */\nexport const map = mapper => list => list.map(mapper);","import {reduce, reduceRight} from \"./list\";\n\n/**\n * identity :: a -> a\n *\n * identity output is the same as input.\n */\nexport const identity = a => a;\n\n/**\n * compose :: [(a -> b)] -> a -> (a -> b)\n *\n * compose output is a function composition\n * where each function receives input and hands over its output to the next function.\n *\n * compose executes functions in reverse order to pipe.\n *\n * compose(f,g)(x) is equivalent to f(g(x)).\n */\nexport const compose = (...fns) => a => reduceRight(a)((v, f) => f(v))(fns);\n\n/**\n * pipe :: [(a -> b)] -> a -> (a -> b)\n *\n * pipe output is a function composition\n * where each function receives input and hands over its output to the next function.\n *\n * pipe executes functions in reverse order to compose.\n *\n * pipe(f,g)(x) is equivalent to g(f(x)).\n */\nexport const pipe = (...fns) => a => reduce(a)((v, f) => f(v))(fns);\n\n/**\n * functorMap :: (a -> b) -> Functor -> Functor\n *\n * functorMap maps function over inputted functor outputting resulting functor.\n */\nexport const functorMap = fn => functor => functor.map(fn);\n\n/**\n * functorFlatMap :: (a -> Functor) -> Functor -> Functor\n *\n * functorFlatMap flatMaps function outputting functor over inputted functor outputting resulting functor.\n */\nexport const functorFlatMap = fn => functor => functor.flatMap(fn);\n\n/**\n * liftA2 (a -> b -> c) -> Applicative a -> Applicative b -> Applicative c\n *\n * liftA2 provides point-free way of writing calls over applicative functors and functions with arity 2.\n */\nexport const liftA2 = fn => ap1 => ap2 => ap1.map(fn).ap(ap2);\n\n/**\n * liftA3 (a -> b -> c -> d) -> Applicative a -> Applicative b -> Applicative c -> Applicative d\n *\n * liftA3 provides point-free way of writing calls over applicative functors and functions with arity 3.\n */\nexport const liftA3 = fn => ap1 => ap2 => ap3 => ap1.map(fn).ap(ap2).ap(ap3);","import {typeOf, lengthOf} from \"./utils\";\nimport {compose} from \"./core\";\n\n/**\n * isEqual :: a -> b -> boolean\n *\n * isEqual output is true if strict equality between a and b is true.\n * isEqual output is always false for comparison of objects and arrays.\n */\nexport const isEqual = a => b => a === b;\n\n/**\n * isNotEqual :: a -> b -> boolean\n *\n * isNotEqual output is true if strict equality between a and b is false.\n * isNotEqual output is always true for comparison of objects and arrays.\n */\nexport const isNotEqual = a => b => a !== b;\n\n/**\n * isTrue :: a -> boolean\n *\n * isTrue output is true if input is true.\n */\nexport const isTrue = isEqual(true);\n\n/**\n * isFalse :: a -> Boolean\n *\n * isFalse output is true if input is false.\n */\nexport const isFalse = isEqual(false);\n\n/**\n * isGreaterThan :: a -> b -> boolean\n *\n * isGreaterThan output is true if b is greater than a.\n */\nexport const isGreaterThan = a => b => b > a;\n\n/**\n * isLessThan :: a -> b -> boolean\n *\n * isLessThan output is true if b is less than a.\n */\nexport const isLessThan = a => b => b < a;\n\n/**\n * isAtLeast :: a -> b -> boolean\n *\n * isAtLeast output is true if b is greater or equal to a.\n */\nexport const isAtLeast = a => b => b >= a;\n\n/**\n * isAtMost :: a -> b -> boolean\n *\n * isAtMost output is true if b is less or equal to a.\n */\nexport const isAtMost = a => b => b <= a;\n\n/**\n * isTypeOf :: a -> b -> boolean\n *\n * isTypeOf output is true if b is a type of a.\n */\nexport const isTypeOf = a => b => isEqual(typeOf(b))(a);\n\n/**\n * isString :: a -> boolean\n *\n * isString output is true if b is a string.\n */\nexport const isString = isTypeOf('string');\n\n/**\n * isBoolean :: a -> boolean\n *\n * isBoolean output is true if b is a boolean.\n */\nexport const isBoolean = isTypeOf('boolean');\n\n/**\n * isNull :: a -> boolean\n *\n * isNull output is true if b is a null.\n */\nexport const isNull = isEqual(null);\n\n/**\n * isUndefined :: a -> boolean\n *\n * isUndefined output is true if b is an undefined.\n */\nexport const isUndefined = isTypeOf('undefined');\n\n/**\n * isNumber :: a -> boolean\n *\n * isNumber output is true if b is a number.\n */\nexport const isNumber = isTypeOf('number');\n\n/**\n * isObject :: a -> boolean\n *\n * isObject output is true if b is an object, array of null.\n */\nexport const isObject = isTypeOf('object');\n\n/**\n * isArray :: a -> boolean\n *\n * isArray output is true if b is an array.\n */\nexport const isArray = Array.isArray;\n\n/**\n * isFunction :: a -> boolean\n *\n * isFunction output is true if b is a function.\n */\nexport const isFunction = isTypeOf('function');\n\n/**\n * isLength :: (string|array) -> b -> boolean\n *\n * isLength output is true if b is a length of a.\n */\nexport const isLength = a => b => isEqual(lengthOf(b))(a);\n\n/**\n * isNotLength :: (string|array) -> b -> boolean\n *\n * isNotLength output is true if b is not a length of a.\n */\nexport const isNotLength = a => b => !isLength(a)(b);\n\n/**\n * isEmpty :: (string|array) -> boolean\n *\n * isEmpty output is true if input has a length of 0.\n * isEmpty output is always false if input is an object and not an array or a string.\n */\nexport const isEmpty = isLength(0);\n\n/**\n * isNotEmpty :: (string|array) -> boolean\n *\n * isNotEmpty output is true if input does not have a length of 0.\n * isNotEmpty output is always true if input is an object and not an array or a string.\n */\nexport const isNotEmpty = isNotLength(0);\n\n/**\n * isZero :: a -> boolean\n *\n * isZero output is true if a is 0.\n */\nexport const isZero = isEqual(0);\n\n/**\n * isNotZero :: a -> boolean\n *\n * isNotZero output is true if a is not 0.\n */\nexport const isNotZero = isNotEqual(0);\n\n/**\n * isNothing :: a -> boolean\n *\n * isNothing returns true if input is null, undefined or empty string or empty array.\n */\nexport const isNothing = a => isNull(a) || isUndefined(a) || isEmpty(a);\n\n/**\n * isJust :: a -> boolean\n *\n * isJust returns true if input is not null, undefined or empty string or empty array.\n */\nexport const isJust = a => !isNothing(a);","import {isArray, isString, isObject, isFunction} from \"./conditional\";\n\n/**\n * typeOf :: a -> string\n *\n * typeOf outputs type of its input a.\n */\nexport const typeOf = a => typeof a;\n\n/**\n * lengthOf :: (string|array) -> number\n */\nexport const lengthOf = a => a.length;\n\n/**\n * passThrough :: function -> a -> a\n *\n * passThrough output is the same as input a.\n * passThrough executes function passed as first argument.\n */\nexport const passThrough = f => a => {\n  f(a);\n  return a;\n};\n\n/**\n * log :: a -> a\n *\n * log output is the same as input.\n * log causes side effect of console.log.\n */\nexport const log = passThrough(console.log);\n\n/**\n * inspectFunction :: (a -> b) -> string\n *\n * inspectFunction outputs name of named function or its conversion to string.\n */\nexport const inspectFunction = f => f.name ? f.name : f.toString();\n\n/**\n * inspectArray :: [a] -> string\n *\n * inspectArray maps over input array [a] and outputs string representing it.\n */\nexport const inspectArray = a => `[${a.map(deepInspect).join(', ')}]`;\n\n/**\n * inspectString :: a -> string\n *\n * inspectString outputs string representing input.\n */\nexport const inspectString = a => `'${a}'`;\n\n/**\n * inspectObject :: a -> string\n *\n * inspectObject outputs string representing input.\n */\nexport const inspectObject = a =>\n  isFunction(a.inspect)\n    ? a.inspect()\n    : `{${Object.keys(a).map(k => [k, deepInspect(a[k])]).map(kv => kv.join(': ')).join(', ')}}`;\n\n/**\n * deepInspect :: a -> string\n *\n * deepInspect runs recursively over input and outputs string representing the input.\n */\nexport const deepInspect = a =>\n  isFunction(a)\n    ? inspectFunction(a)\n    : isArray(a)\n      ? inspectArray(a)\n      : isObject(a)\n        ? inspectObject(a)\n        : isString(a)\n          ? inspectString(a)\n          : String(a);","/**\n * trim :: string -> string\n *\n * trim output is a string without white characters around it.\n */\nexport const trim = string => string.trim();\n\n/**\n * includes :: string -> string -> boolean\n *\n * includes output is true if b includes a.\n */\nexport const includes = what => string => string.includes(what);\n\n/**\n * testRegEx :: regex -> string -> boolean\n *\n * testRegEx returns true if string b passes regular expression a.\n */\nexport const testRegEx = regex => string => regex.test(string);\n\n/**\n * substr :: number -> number -> string -> string\n */\nexport const substr = limit => start => string => string.substr(start, limit);\n\n/**\n * startsWith :: string -> string -> boolean\n */\nexport const startsWith = what => string => string.startsWith(what);","import {deepInspect} from \"./utils\";\nimport {isNothing} from \"./conditional\";\nimport {identity} from \"./core\";\n\n/**\n * Maybe.of() outputs instance of Maybe.\n * Maybe.of(a).inspect() outputs string Just(a) or Nothing.\n * Maybe.of(a) outputs Nothing for an input that is null, undefined, an empty string or an empty array.\n * Maybe.of(a) outputs Just for an input a that is not Nothing.\n * Maybe.of(a) outputs Nothing for an input a that is null or undefined.\n * Maybe.of(a).isJust() of an input a outputs true for a value that is Just.\n * Maybe.of(a).isNothing() of an input a outputs true for a value that is Nothing.\n * Maybe.of(a).map(a -> b) executes function over Maybe input a.\n * Maybe.of(a).map(a -> Just) outputs Just(Just).\n * Maybe.of(a).map(a -> b) does not execute over Nothing.\n * Maybe.of(a).flatMap(a -> b) executes function over Maybe input a returns its raw value.\n * Maybe.of(a).flatMap(a -> b) does not execute over Nothing.\n * Maybe.of(a).map(a -> b).ap(Maybe) provides applicative ability to apply functors to each other.\n * Maybe.of(Maybe -> Maybe -> c).ap(Maybe).ap(Maybe) provides applicative interface for a functor of a function.\n */\nexport class Maybe {\n  constructor(x) {\n    this.value = x;\n  }\n\n  static of(x) {\n    return isNothing(x) ? new Nothing(x) : new Just(x) ;\n  }\n}\n\nclass Just extends Maybe {\n  inspect() {\n    return `Just(${deepInspect(this.value)})`;\n  }\n\n  isNothing() {\n    return false;\n  }\n\n  isJust() {\n    return true;\n  }\n\n  map(fn) {\n    return Maybe.of(fn(this.value));\n  }\n\n  flatMap(fn) {\n    return fn(this.value);\n  }\n\n  ap(f) {\n    return f.map(this.value);\n  }\n\n  sequence(of) {\n    this.traverse(of, identity);\n  }\n\n  traverse(of, fn) {\n    return fn(this.value).map(Maybe.of);\n  }\n}\n\nclass Nothing extends Maybe {\n  inspect () {\n    return 'Nothing';\n  }\n\n  isNothing() {\n    return true\n  }\n\n  isJust() {\n    return false;\n  }\n\n  map(fn) {\n    return this;\n  }\n\n  flatMap(fn) {\n    return this;\n  }\n\n  ap(f) {\n    return this;\n  }\n\n  sequence(of) {\n    return of(this);\n  }\n\n  traverse(of, fn) {\n    return of(this);\n  }\n}","import {deepInspect} from \"./utils\";\nimport {identity} from \"./core\";\n\n/**\n * Either.of() outputs instance of Either.\n * Either.of(a) outputs instance of Right holding its input value.\n * Either.Right(a) outputs instance of Right holding its input value.\n * Either.Left(a) outputs instance of Left holding its input value.\n * Either.of(a).inspect() outputs string Right(a).\n * Either.Right(a).inspect() outputs string Right(a).\n * Either.Left(a).inspect() outputs string Left(a).\n * Either.of(a).isRight() always outputs true.\n * Either.Left(a).isLeft() outputs false if Either is Left.\n * Either.try(a -> b) outputs Right(b) if no error is thrown.\n * Either.try(a -> b) outputs Left(e.message) if error is thrown.\n * Either.of(a).map(a -> b) executes function over Either input a.\n * Either.of(a).map(a -> Right) outputs Right(Right).\n * Either.Left(a).map(a -> b) does not execute provided function and retains Left input value.\n * Either.of(a).flatMap(a -> b) executes function over Either input a returns its raw value through flatten.\n * Either.Left(a).flatMap(a -> b) does not execute provided function and retains Left input value.\n * Either.of(Either -> Either -> c).ap(Either).ap(Either) provides applicative interface.\n */\nexport class Either {\n  constructor(x) {\n    this.value = x;\n  }\n\n  static of(x) {\n    return new Right(x);\n  }\n\n  static Right(x) {\n    return new Right(x);\n  }\n\n  static Left(x) {\n    return new Left(x);\n  }\n\n  static try(fn) {\n    try {\n      return new Right(fn());\n    } catch(e) {\n      return new Left(e.message);\n    }\n  }\n}\n\nclass Right extends Either {\n  inspect() {\n    return `Right(${deepInspect(this.value)})`;\n  }\n\n  isLeft() {\n    return false;\n  }\n\n  isRight() {\n    return true;\n  }\n\n  map(fn) {\n    return Either.of(fn(this.value));\n  }\n\n  flatMap(fn) {\n    return fn(this.value);\n  }\n\n  ap(f) {\n    return f.map(this.value);\n  }\n\n  sequence(of) {\n    return this.traverse(of, identity);\n  }\n\n  traverse(of, fn) {\n    fn(this.value).map(Either.of);\n  }\n}\n\nclass Left extends Either {\n  inspect() {\n    return `Left(${deepInspect(this.value)})`;\n  }\n\n  isLeft() {\n    return true;\n  }\n\n  isRight() {\n    return false;\n  }\n\n  map() {\n    return this;\n  }\n\n  flatMap() {\n    return this;\n  }\n\n  ap() {\n    return this;\n  }\n\n  sequence(of) {\n    return of(this);\n  }\n\n  traverse(of, fn) {\n    return of(this);\n  }\n}","import {compose} from \"./core\";\nimport {deepInspect} from \"./utils\";\n\n/**\n * SyncEffect.of() outputs instance of SyncEffect.\n * SyncEffect.wrap(a) is equal to SyncEffect.of(() -> a).\n * SyncEffect.of(() -> a).inspect() outputs string SyncEffect(a).\n * SyncEffect.of(() -> a).trigger() executes function provided as input of SyncEffect.\n * SyncEffect.of(() -> a).map(b -> c) composes function over SyncEffect input function.\n * SyncEffect.of(() -> a).map(b -> SyncEffect) outputs SyncEffect(SyncEffect).\n * SyncEffect.of(() -> a).flatMap(b -> SyncEffect) outputs SyncEffect.\n * SyncEffect.of(() -> a).map(a -> b).ap(SyncEffect) provides applicative ability to apply functors to each other.\n * SyncEffect.of(SyncEffect -> SyncEffect -> c).ap(SyncEffect).ap(SyncEffect) provides applicative interface for a functor of a function.\n * No input function is executed until trigger is called.\n */\nexport class SyncEffect {\n  constructor(fn) {\n    this.trigger = fn;\n  }\n\n  inspect() {\n    return `SyncEffect(${deepInspect(this.trigger)})`;\n  }\n\n  static of(x) {\n    return new SyncEffect(x);\n  }\n\n  static wrap(x) {\n    return new SyncEffect(() => x);\n  }\n\n  map(fn) {\n    return new SyncEffect(compose(fn, this.trigger));\n  }\n\n  flatMap(fn) {\n    return new SyncEffect(() => {\n      return this.map(fn).trigger().trigger();\n    })\n  }\n\n  ap(f) {\n    return this.flatMap(fn => f.map(fn));\n  }\n}","import {deepInspect} from \"./utils\";\nimport {compose} from \"./core\";\n\n/**\n * AsyncEffect.of() outputs instance of AsyncEffect.\n * AsyncEffect.of(() -> a).inspect() outputs string AsyncEffect(a).\n * AsyncEffect.wrap(a) is equal to AsyncEffect.of((_, resolve) -> resolve(a)).\n * AsyncEffect.of((a, b) -> c).promise() outputs JavaScript promise.\n * AsyncEffect.of((a, b) -> c).trigger(d -> e, f -> g) for resolving async function resolves.\n * AsyncEffect.of((a, b) -> c).trigger(d -> e, f -> g) for rejecting async function rejects.\n * AsyncEffect.of((a, b) -> c).map(b -> c) composes function over AsyncEffect input function.\n * AsyncEffect.of((a, b) -> c).map(b -> AsyncEffect) outputs AsyncEffect(AsyncEffect).\n * AsyncEffect.of((a, b) -> c).flatMap(b -> AsyncEffect) outputs AsyncEffect.\n * AsyncEffect.of((a, b) -> c).map(a -> b).ap(AsyncEffect) provides applicative ability to apply functors to each other.\n * AsyncEffect.of(AsyncEffect -> AsyncEffect -> c).ap(AsyncEffect).ap(AsyncEffect) provides applicative interface for a functor of a function.\n * No input function is executed until trigger is called.\n */\nexport class AsyncEffect {\n  constructor(fn) {\n    this.trigger = fn;\n  }\n\n  inspect() {\n    return `AsyncEffect(${deepInspect(this.trigger)})`;\n  }\n\n  static of(x) {\n    return new AsyncEffect(x);\n  }\n\n  static wrap(x) {\n    return new AsyncEffect((_, resolve) => resolve(x));\n  }\n\n  promise() {\n    return new Promise((resolve, reject) => this.trigger(reject, resolve));\n  }\n\n  map(fn) {\n    return new AsyncEffect((reject, resolve) => this.trigger(reject, compose(resolve, fn)));\n  }\n\n  flatMap(fn) {\n    return new AsyncEffect((reject, resolve) => this.trigger(reject, x => fn(x).trigger(reject, resolve)));\n  }\n\n  ap(f) {\n    return this.flatMap(fn => f.map(fn));\n  }\n}","export * from './list';\nexport * from './core';\nexport * from './utils';\nexport * from './conditional';\nexport * from './string';\nexport * from './Maybe';\nexport * from './Either';\nexport * from './SyncEffect';\nexport * from './AsyncEffect';"],"sourceRoot":""}